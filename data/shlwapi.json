{
    "functions": [
        {
            "name": "AssocCreate",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assoccreate",
            "description": "",
            "parameters": [
                {
                    "name": "clsid",
                    "type": "CLSID",
                    "description": "Type: CLSID The CLSID of the object that exposes the interface. This parameter must be set to CLSID_QueryAssociations, which is defined in Shlguid.h.",
                    "possible_constants": []
                },
                {
                    "name": "riid",
                    "type": "REFIID",
                    "description": "Type: REFIID Reference to the IID IID_IQueryAssociations, which is defined in Shlguid.h. [out] ppv Type: void* When this method returns, contains the IQueryAssociations interface pointer requested in riid.",
                    "possible_constants": []
                },
                {
                    "name": "**ppv",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocGetPerceivedType",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocgetperceivedtype",
            "description": "",
            "parameters": [
                {
                    "name": "pszExt",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a buffer that contains the file's extension. This should include the leading period, for example \".txt\". [out] ptype Type: PERCEIVED* A pointer to a PERCEIVED value that indicates the perceived type. [out] pflag Type: PERCEIVEDFLAG* A pointer to a value that indicates the source of the perceived type information. One or more of the following values. No perceived type was found (PERCEIVED_TYPE_UNSPECIFIED). The perceived type was determined through an association in the registry. The perceived type is inherently known to Windows. The perceived type was determined through a codec provided with Windows. The perceived type is supported by the GDI+ library. The perceived type is supported by the Windows\u00a0Media SDK. The perceived type is supported by Windows compressed folders. [out, optional] ppszType Type: PWSTR* If the function returns a success code, this contains the address of a pointer to a buffer that receives the perceived type string, for instance \"text\" or \"video\". This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*ptype",
                    "type": "PERCEIVED",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pflag",
                    "type": "PERCEIVEDFLAG",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*ppszType",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocIsDangerous",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-associsdangerous",
            "description": "",
            "parameters": [
                {
                    "name": "pszAssoc",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a string that contains the type of file in question. This may be either an extension such as \".exe\" or a progid such as \"exefile\".",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryKeyA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerykeya",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "key",
                    "type": "ASSOCKEY",
                    "description": "Type: ASSOCKEY The ASSOCKEY value that specifies the type of key that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "pszAssoc",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that is used to determine the root key. Four types of strings can be used. A file name extension, such as .txt. A CLSID GUID in the standard \"{GUID}\" format. An application's ProgID, such as Word.Document.8. The name of an application's .exe file. The ASSOCF_OPEN_BYEXENAME flag must be set in flags.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to an optional null-terminated string with additional information about the location of the string. It is normally set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out] phkeyOut Type: HKEY* A pointer to the key's HKEY value.",
                    "possible_constants": []
                },
                {
                    "name": "*phkeyOut",
                    "type": "HKEY",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryKeyW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerykeyw",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "key",
                    "type": "ASSOCKEY",
                    "description": "Type: ASSOCKEY The ASSOCKEY value that specifies the type of key that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "pszAssoc",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that is used to determine the root key. Four types of strings can be used. A file name extension, such as .txt. A CLSID GUID in the standard \"{GUID}\" format. An application's ProgID, such as Word.Document.8. The name of an application's .exe file. The ASSOCF_OPEN_BYEXENAME flag must be set in flags.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to an optional null-terminated string with additional information about the location of the string. It is normally set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out] phkeyOut Type: HKEY* A pointer to the key's HKEY value.",
                    "possible_constants": []
                },
                {
                    "name": "*phkeyOut",
                    "type": "HKEY",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryStringA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerystringa",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "str",
                    "type": "ASSOCSTR",
                    "description": "Type: ASSOCSTR The ASSOCSTR value that specifies the type of string that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "pszAssoc",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that is used to determine the root key. The following four types of strings can be used.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR An optional null-terminated string with additional information about the location of the string. It is typically set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out, optional] pszOut Type: LPTSTR Pointer to a null-terminated string that, when this function returns successfully, receives the requested string. Set this parameter to NULL to retrieve the required buffer size. [in, out] pcchOut Type: DWORD* A pointer to a value that, when calling the function, is set to the number of characters in the pszOut buffer. When the function returns successfully, the value is set to the number of characters actually placed in the buffer. If the ASSOCF_NOTRUNCATE flag is set in flags and the buffer specified in pszOut is too small, the function returns E_POINTER and the value is set to the required size of the buffer. If pszOut is NULL, the function returns S_FALSE and pcchOut points to the required size, in characters, of the buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryStringByKeyA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerystringbykeya",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "str",
                    "type": "ASSOCSTR",
                    "description": "Type: ASSOCSTR The ASSOCSTR value that specifies the type of string that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "hkAssoc",
                    "type": "HKEY",
                    "description": "Type: HKEY The HKEY value of the key that will be used as a root key. The search looks only below this key.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to an optional null-terminated string with additional information about the location of the string. It is normally set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out, optional] pszOut Type: LPTSTR A pointer to a null-terminated string used to return the requested string. Set this parameter to NULL to retrieve the required buffer size. [in, out] pcchOut Type: DWORD* A pointer to a value that, on entry, specifies the number of characters in the pszOut buffer. When the function returns, it points to the number of characters placed in the buffer. If the ASSOCF_NOTRUNCATE flag is set in flags and the buffer specified in pszOut is too small, the function returns E_POINTER and the value is set to the required size of the buffer. If pszOut is NULL, the function returns S_FALSE and pcchOut points to the required size of the buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryStringByKeyW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerystringbykeyw",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "str",
                    "type": "ASSOCSTR",
                    "description": "Type: ASSOCSTR The ASSOCSTR value that specifies the type of string that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "hkAssoc",
                    "type": "HKEY",
                    "description": "Type: HKEY The HKEY value of the key that will be used as a root key. The search looks only below this key.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to an optional null-terminated string with additional information about the location of the string. It is normally set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out, optional] pszOut Type: LPTSTR A pointer to a null-terminated string used to return the requested string. Set this parameter to NULL to retrieve the required buffer size. [in, out] pcchOut Type: DWORD* A pointer to a value that, on entry, specifies the number of characters in the pszOut buffer. When the function returns, it points to the number of characters placed in the buffer. If the ASSOCF_NOTRUNCATE flag is set in flags and the buffer specified in pszOut is too small, the function returns E_POINTER and the value is set to the required size of the buffer. If pszOut is NULL, the function returns S_FALSE and pcchOut points to the required size of the buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "AssocQueryStringW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-assocquerystringw",
            "description": "",
            "parameters": [
                {
                    "name": "flags",
                    "type": "ASSOCF",
                    "description": "Type: ASSOCF The flags that can be used to control the search. It can be any combination of ASSOCF values, except that only one ASSOCF_INIT value can be included.",
                    "possible_constants": []
                },
                {
                    "name": "str",
                    "type": "ASSOCSTR",
                    "description": "Type: ASSOCSTR The ASSOCSTR value that specifies the type of string that is to be returned.",
                    "possible_constants": []
                },
                {
                    "name": "pszAssoc",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that is used to determine the root key. The following four types of strings can be used. A file name extension, such as .txt. A CLSID GUID in the standard \"{GUID}\" format. An application's ProgID, such as Word.Document.8. The name of an application's .exe file. The ASSOCF_OPEN_BYEXENAME flag must be set in flags.",
                    "possible_constants": []
                },
                {
                    "name": "pszExtra",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR An optional null-terminated string with additional information about the location of the string. It is typically set to a Shell verb such as open. Set this parameter to NULL if it is not used. [out, optional] pszOut Type: LPTSTR Pointer to a null-terminated string that, when this function returns successfully, receives the requested string. Set this parameter to NULL to retrieve the required buffer size. [in, out] pcchOut Type: DWORD* A pointer to a value that, when calling the function, is set to the number of characters in the pszOut buffer. When the function returns successfully, the value is set to the number of characters actually placed in the buffer. If the ASSOCF_NOTRUNCATE flag is set in flags and the buffer specified in pszOut is too small, the function returns E_POINTER and the value is set to the required size of the buffer. If pszOut is NULL, the function returns S_FALSE and pcchOut points to the required size, in characters, of the buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ChrCmpIA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-chrcmpia",
            "description": "",
            "parameters": [
                {
                    "name": "w1",
                    "type": "WORD",
                    "description": "Type: WORD The first character to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "w2",
                    "type": "WORD",
                    "description": "Type: WORD The second character to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ChrCmpIW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-chrcmpiw",
            "description": "",
            "parameters": [
                {
                    "name": "w1",
                    "type": "WCHAR",
                    "description": "Type: WCHAR The first character to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "w2",
                    "type": "WCHAR",
                    "description": "Type: WCHAR The second character to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ColorAdjustLuma",
            "return_type": "COLORREF",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-coloradjustluma",
            "description": "",
            "parameters": [
                {
                    "name": "clrRGB",
                    "type": "COLORREF",
                    "description": " Type: COLORREF The initial RGB value.",
                    "possible_constants": []
                },
                {
                    "name": "n",
                    "type": "int",
                    "description": " Type: int The luminance in units of 0.1 percent of the total range. For example, a value of n = 50 corresponds to 5 percent of the maximum luminance.",
                    "possible_constants": []
                },
                {
                    "name": "fScale",
                    "type": "BOOL",
                    "description": " Type: BOOL If fScale is set to TRUE, n specifies how much to increment or decrement the current luminance. If fScale is set to FALSE, n specifies the absolute luminance.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ColorHLSToRGB",
            "return_type": "COLORREF",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-colorhlstorgb",
            "description": "",
            "parameters": [
                {
                    "name": "wHue",
                    "type": "WORD",
                    "description": " Type: WORD The original HLS hue value.\nCan range from 0 to 240.",
                    "possible_constants": []
                },
                {
                    "name": "wLuminance",
                    "type": "WORD",
                    "description": " Type: WORD The original HLS luminance value.\nCan range from 0 to 240.",
                    "possible_constants": []
                },
                {
                    "name": "wSaturation",
                    "type": "WORD",
                    "description": " Type: WORD The original HLS saturation value.\nCan range from 0 to 240.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ColorRGBToHLS",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-colorrgbtohls",
            "description": "",
            "parameters": [
                {
                    "name": "clrRGB",
                    "type": "COLORREF",
                    "description": " Type: COLORREF The original RGB color. [out] pwHue Type: WORD* A pointer to a value that, when this method returns successfully, receives the HLS hue value.\nCan range from 0 to 240. [out] pwLuminance Type: WORD* A pointer to a value that, when this method returns successfully, receives the HLS luminance value.\nCan range from 0 to 240. [out] pwSaturation Type: WORD* A pointer to a value that, when this method returns successfully, receives the HLS saturation value.\nCan range from 0 to 240.",
                    "possible_constants": []
                },
                {
                    "name": "*pwHue",
                    "type": "WORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pwLuminance",
                    "type": "WORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pwSaturation",
                    "type": "WORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ConnectToConnectionPoint",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-connecttoconnectionpoint",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "riidEvent",
                    "type": "REFIID",
                    "description": "Type: REFIID The IID of the interface on the connection point container whose connection point object is being requested.",
                    "possible_constants": []
                },
                {
                    "name": "fConnect",
                    "type": "BOOL",
                    "description": " Type: BOOL TRUE if a connection is being established; FALSE if a connection is being broken. [in] punkTarget Type: IUnknown* A pointer to the connection point container's IUnknown interface. [out] pdwCookie Type: DWORD* A connection token. If you set fConnect to TRUE to make a new connection, this parameter receives a token that uniquely identifies the connection. If you set fConnect to FALSE to break a connection, this parameter must point to the token that you received when you called ConnectToConnectionPoint to establish the connection. [out, optional] ppcpOut Type: IConnectionPoint** A pointer to the connection point container's IConnectionPoint interface, if the operation was successful. The calling application must release this pointer when it is no longer needed. If the request is unsuccessful, the pointer receives NULL. This parameter is optional and can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*punkTarget",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pdwCookie",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "**ppcpOut",
                    "type": "IConnectionPoint",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "DllInstall",
            "return_type": "HRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-dllinstall",
            "description": "",
            "parameters": [
                {
                    "name": "bInstall",
                    "type": "BOOL",
                    "description": " Type: BOOL TRUE if the DLL is being installed; FALSE if it is being uninstalled.",
                    "possible_constants": []
                },
                {
                    "name": "pszCmdLine",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A string passed in by regsvr32 that indicates which setup procedure to use. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "GetAcceptLanguagesA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-getacceptlanguagesa",
            "description": "",
            "parameters": [
                {
                    "name": "pszLanguages",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchLanguages",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "GetAcceptLanguagesW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-getacceptlanguagesw",
            "description": "",
            "parameters": [
                {
                    "name": "pszLanguages",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchLanguages",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "GetMenuPosFromID",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-getmenuposfromid",
            "description": "",
            "parameters": [
                {
                    "name": "hmenu",
                    "type": "HMENU",
                    "description": "Type: HMENU The handle of the menu.",
                    "possible_constants": []
                },
                {
                    "name": "id",
                    "type": "UINT",
                    "description": " Type: UINT An application-defined 16-bit value that identifies the menu item.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "GetProcessReference",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-getprocessreference",
            "description": "",
            "parameters": [
                {
                    "name": "**punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "HashData",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-hashdata",
            "description": "",
            "parameters": [
                {
                    "name": "*pbData",
                    "type": "BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": " Type: DWORD The number of elements in the array at pbData. [out] pbHash Type: BYTE* A pointer to a value that, when this function returns successfully, receives the hashed array.",
                    "possible_constants": []
                },
                {
                    "name": "*pbHash",
                    "type": "BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbHash",
                    "type": "DWORD",
                    "description": " Type: DWORD The number of elements in pbHash. It should be no larger than 256.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IntlStrEqNA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqna",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "IntlStrEqNIA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqnia",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "IntlStrEqNIW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqniw",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "IntlStrEqNW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqnw",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "IntlStrEqWorkerA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqworkera",
            "description": "",
            "parameters": [
                {
                    "name": "fCaseSens",
                    "type": "BOOL",
                    "description": "Type: BOOL A value that is set to TRUE for a case-sensitive comparison, or to FALSE for a case-insensitive comparison.",
                    "possible_constants": []
                },
                {
                    "name": "lpString1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string.",
                    "possible_constants": []
                },
                {
                    "name": "lpString2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters to be compared, starting from the beginning of the strings.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IntlStrEqWorkerW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-intlstreqworkerw",
            "description": "",
            "parameters": [
                {
                    "name": "fCaseSens",
                    "type": "BOOL",
                    "description": "Type: BOOL A value that is set to TRUE for a case-sensitive comparison, or to FALSE for a case-insensitive comparison.",
                    "possible_constants": []
                },
                {
                    "name": "lpString1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string.",
                    "possible_constants": []
                },
                {
                    "name": "lpString2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters to be compared, starting from the beginning of the strings.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IsCharSpaceA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-ischarspacea",
            "description": "",
            "parameters": [
                {
                    "name": "wch",
                    "type": "CHAR",
                    "description": "Type: TCHAR A single character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IsCharSpaceW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-ischarspacew",
            "description": "",
            "parameters": [
                {
                    "name": "wch",
                    "type": "WCHAR",
                    "description": "Type: TCHAR A single character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IsInternetESCEnabled",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-isinternetescenabled",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "IsOS",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-isos",
            "description": "",
            "parameters": [
                {
                    "name": "dwOS",
                    "type": "DWORD",
                    "description": "Type: DWORD A value that specifies which operating system or operating system feature to check for. One of the following values (you cannot combine values).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_Copy",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_copy",
            "description": "",
            "parameters": [
                {
                    "name": "*pstmFrom",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pstmTo",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cb",
                    "type": "DWORD",
                    "description": "Type: DWORD The number of bytes to copy from the source stream.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_Read",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_read",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pv",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cb",
                    "type": "ULONG",
                    "description": "Type: ULONG The number of bytes of data that the function should attempt to read from the input stream.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_ReadPidl",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_readpidl",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*ppidlOut",
                    "type": "PIDLIST_RELATIVE",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_ReadStr",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_readstr",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*ppsz",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_Reset",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_reset",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_Size",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_size",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pui",
                    "type": "ULARGE_INTEGER",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_Write",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_write",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pv",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cb",
                    "type": "ULONG",
                    "description": "Type: ULONG The number of bytes of data to write to the target stream.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_WritePidl",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_writepidl",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidlWrite",
                    "type": "PCUIDLIST_RELATIVE",
                    "description": "Type: PCUIDLIST_RELATIVE The source PIDL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IStream_WriteStr",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-istream_writestr",
            "description": "",
            "parameters": [
                {
                    "name": "*pstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "psz",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated, Unicode string from which to read.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_AtomicRelease",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_atomicrelease",
            "description": "",
            "parameters": [
                {
                    "name": "**ppunk",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_GetSite",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_getsite",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "riid",
                    "type": "REFIID",
                    "description": "Type: REFIID The IID of the interface pointer that should be returned in ppvSite. [out] ppv Type: VOID** The address of the pointer to receive the requested interface pointer. If the function call is successful, ppvSite will contain the requested interface pointer. If no site is available or the requested interface is not supported, ppvSite is set to NULL and the function returns a COM error code.",
                    "possible_constants": []
                },
                {
                    "name": "**ppv",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_GetWindow",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_getwindow",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*phwnd",
                    "type": "HWND",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_QueryService",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_queryservice",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "guidService",
                    "type": "REFGUID",
                    "description": "Type: REFGUID The service's unique identifier (SID).",
                    "possible_constants": []
                },
                {
                    "name": "riid",
                    "type": "REFIID",
                    "description": "Type: REFIID The IID of the desired service interface. [out] ppvOut Type: void** When this method returns, contains the interface pointer requested riid. If successful, the calling application is responsible for calling IUnknown::Release using this value when the service is no longer needed. In the case of failure, this value is NULL.",
                    "possible_constants": []
                },
                {
                    "name": "**ppvOut",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_Set",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_set",
            "description": "",
            "parameters": [
                {
                    "name": "**ppunk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "IUnknown_SetSite",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-iunknown_setsite",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*punkSite",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "MAKEDLLVERULL",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-makedllverull",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "ParseURLA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-parseurla",
            "description": "",
            "parameters": [
                {
                    "name": "pcszURL",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string containing the URL to be parsed. [in, out] ppu Type: PARSEDURL* A pointer to a PARSEDURL structure that receives the parsed results. The calling application must set the structure's cbSize member to the size of the structure before calling ParseURL.",
                    "possible_constants": []
                },
                {
                    "name": "*ppu",
                    "type": "PARSEDURLA",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "ParseURLW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-parseurlw",
            "description": "",
            "parameters": [
                {
                    "name": "pcszURL",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string containing the URL to be parsed. [in, out] ppu Type: PARSEDURL* A pointer to a PARSEDURL structure that receives the parsed results. The calling application must set the structure's cbSize member to the size of the structure before calling ParseURL.",
                    "possible_constants": []
                },
                {
                    "name": "*ppu",
                    "type": "PARSEDURLW",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAddBackslashA",
            "return_type": "LPSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathaddbackslasha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a buffer with a string that represents a path. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAddBackslashW",
            "return_type": "LPWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathaddbackslashw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a buffer with a string that represents a path. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAddExtensionA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathaddextensiona",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a buffer with the null-terminated string to which the file name extension will be appended. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszExt",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the file name extension. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAddExtensionW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathaddextensionw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a buffer with the null-terminated string to which the file name extension will be appended. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszExt",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the file name extension. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAppendA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathappenda",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string to which the path specified in pszMore is appended. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszMore",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be appended.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathAppendW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathappendw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string to which the path specified in pszMore is appended. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszMore",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be appended.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathBuildRootA",
            "return_type": "LPSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathbuildroota",
            "description": "",
            "parameters": [
                {
                    "name": "pszRoot",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "iDrive",
                    "type": "int",
                    "description": "Type: int A variable of type int that indicates the desired drive number. It should be between 0 and 25.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathBuildRootW",
            "return_type": "LPWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathbuildrootw",
            "description": "",
            "parameters": [
                {
                    "name": "pszRoot",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "iDrive",
                    "type": "int",
                    "description": "Type: int A variable of type int that indicates the desired drive number. It should be between 0 and 25.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCanonicalizeA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcanonicalizea",
            "description": "",
            "parameters": [
                {
                    "name": "pszBuf",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be canonicalized.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCanonicalizeW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcanonicalizew",
            "description": "",
            "parameters": [
                {
                    "name": "pszBuf",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be canonicalized.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCombineA",
            "return_type": "LPSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcombinea",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszDir",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the first path. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszFile",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the second path. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCombineW",
            "return_type": "LPWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcombinew",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszDir",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the first path. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszFile",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the second path. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCommonPrefixA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcommonprefixa",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the first path name.",
                    "possible_constants": []
                },
                {
                    "name": "pszFile2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the second path name. [out, optional] achPath Type: LPTSTR A pointer to a buffer that receives the common prefix. This buffer must be at least MAX_PATH characters in size. If there is no common prefix, it is set to NULL.",
                    "possible_constants": []
                },
                {
                    "name": "achPath",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCommonPrefixW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcommonprefixw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the first path name.",
                    "possible_constants": []
                },
                {
                    "name": "pszFile2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the second path name. [out, optional] achPath Type: LPTSTR A pointer to a buffer that receives the common prefix. This buffer must be at least MAX_PATH characters in size. If there is no common prefix, it is set to NULL.",
                    "possible_constants": []
                },
                {
                    "name": "achPath",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCompactPathA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcompactpatha",
            "description": "",
            "parameters": [
                {
                    "name": "hDC",
                    "type": "HDC",
                    "description": "Type: HDC A handle to the device context used for font metrics. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be modified. On return, this buffer will contain the modified string.",
                    "possible_constants": []
                },
                {
                    "name": "dx",
                    "type": "UINT",
                    "description": "Type: UINT The width, in pixels, in which the string must fit.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCompactPathExA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcompactpathexa",
            "description": "",
            "parameters": [
                {
                    "name": "pszOut",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be altered.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": "Type: UINT The maximum number of characters to be contained in the new string, including the terminating null character. For example, if cchMax = 8, the resulting string can contain a maximum of 7 characters plus the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCompactPathExW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcompactpathexw",
            "description": "",
            "parameters": [
                {
                    "name": "pszOut",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be altered.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": "Type: UINT The maximum number of characters to be contained in the new string, including the terminating null character. For example, if cchMax = 8, the resulting string can contain a maximum of 7 characters plus the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCompactPathW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcompactpathw",
            "description": "",
            "parameters": [
                {
                    "name": "hDC",
                    "type": "HDC",
                    "description": "Type: HDC A handle to the device context used for font metrics. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be modified. On return, this buffer will contain the modified string.",
                    "possible_constants": []
                },
                {
                    "name": "dx",
                    "type": "UINT",
                    "description": "Type: UINT The width, in pixels, in which the string must fit.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCreateFromUrlA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcreatefromurla",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pszPath Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the MS-DOS path. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string. [in, out] pcchPath Type: DWORD* The number of characters in the pszPath buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchPath",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Set this parameter to NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCreateFromUrlAlloc",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcreatefromurlalloc",
            "description": "",
            "parameters": [
                {
                    "name": "pszIn",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the URL of a file, represented as a null-terminated, Unicode string. [out] ppszOut Type: PWSTR* The address of a pointer to a buffer of length MAX_PATH that, when this function returns successfully, receives the file path.",
                    "possible_constants": []
                },
                {
                    "name": "*ppszOut",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved, must be 0.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathCreateFromUrlW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathcreatefromurlw",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pszPath Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the MS-DOS path. You must set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string. [in, out] pcchPath Type: DWORD* The number of characters in the pszPath buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchPath",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Set this parameter to NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFileExistsA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfileexistsa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the full path of the object to verify.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFileExistsW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfileexistsw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the full path of the object to verify.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindExtensionA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindextensiona",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search, including the extension being searched for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindExtensionW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindextensionw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search, including the extension being searched for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindFileNameA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindfilenamea",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindFileNameW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindfilenamew",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindNextComponentA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindnextcomponenta",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string that contains the path to parse. This string must not be longer than MAX_PATH characters, plus the terminating null character. Path components are delimited by backslashes. For instance, the path \"c:\\path1\\path2\\file.txt\" has four components: c:, path1, path2, and file.txt.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindNextComponentW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindnextcomponentw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string that contains the path to parse. This string must not be longer than MAX_PATH characters, plus the terminating null character. Path components are delimited by backslashes. For instance, the path \"c:\\path1\\path2\\file.txt\" has four components: c:, path1, path2, and file.txt.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindOnPathA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindonpatha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the file name for which to search. If the search is successful, this parameter is used to return the fully qualified path name.",
                    "possible_constants": []
                },
                {
                    "name": "ppszOtherDirs",
                    "type": "PZPCSTR",
                    "description": "Type: LPCTSTR* An optional, null-terminated array of directories to be searched first. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindOnPathW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindonpathw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the file name for which to search. If the search is successful, this parameter is used to return the fully qualified path name.",
                    "possible_constants": []
                },
                {
                    "name": "ppszOtherDirs",
                    "type": "PZPCWSTR",
                    "description": "Type: LPCTSTR* An optional, null-terminated array of directories to be searched first. This value can be NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindSuffixArrayA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindsuffixarraya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file name to be tested. A full path can be used. [in] apszSuffix Type: const LPCTSTR* An array of iArraySize string pointers. Each string pointed to is null-terminated and contains one suffix. The strings can be of variable lengths.",
                    "possible_constants": []
                },
                {
                    "name": "*apszSuffix",
                    "type": "const LPCSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "iArraySize",
                    "type": "int",
                    "description": "Type: int The number of elements in the array pointed to by apszSuffix.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathFindSuffixArrayW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathfindsuffixarrayw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file name to be tested. A full path can be used. [in] apszSuffix Type: const LPCTSTR* An array of iArraySize string pointers. Each string pointed to is null-terminated and contains one suffix. The strings can be of variable lengths.",
                    "possible_constants": []
                },
                {
                    "name": "*apszSuffix",
                    "type": "const LPCWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "iArraySize",
                    "type": "int",
                    "description": "Type: int The number of elements in the array pointed to by apszSuffix.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetArgsA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetargsa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: PTSTR Pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetArgsW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetargsw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: PTSTR Pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetCharTypeA",
            "return_type": "UINT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetchartypea",
            "description": "",
            "parameters": [
                {
                    "name": "ch",
                    "type": "UCHAR",
                    "description": "Type: TUCHAR The character for which to determine the type.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetCharTypeW",
            "return_type": "UINT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetchartypew",
            "description": "",
            "parameters": [
                {
                    "name": "ch",
                    "type": "WCHAR",
                    "description": "Type: TUCHAR The character for which to determine the type.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetDriveNumberA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetdrivenumbera",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathGetDriveNumberW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathgetdrivenumberw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsContentTypeA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathiscontenttypea",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file whose content type will be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszContentType",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a character buffer that contains the null-terminated content type string to which the file's registered content type will be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsContentTypeW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathiscontenttypew",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file whose content type will be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszContentType",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a character buffer that contains the null-terminated content type string to which the file's registered content type will be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsDirectoryA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisdirectorya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to verify.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsDirectoryEmptyA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisdirectoryemptya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be tested.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsDirectoryEmptyW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisdirectoryemptyw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be tested.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsDirectoryW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisdirectoryw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to verify.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsFileSpecA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisfilespeca",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsFileSpecW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisfilespecw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be searched.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsHTMLFileA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathishtmlfilea",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "PathIsHTMLFileW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathishtmlfilew",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "PathIsLFNFileSpecA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathislfnfilespeca",
            "description": "",
            "parameters": [
                {
                    "name": "pszName",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file name to be tested.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsLFNFileSpecW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathislfnfilespecw",
            "description": "",
            "parameters": [
                {
                    "name": "pszName",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the file name to be tested.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsNetworkPathA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisnetworkpatha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsNetworkPathW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisnetworkpathw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsPrefixA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisprefixa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPrefix",
                    "type": "LPCSTR",
                    "description": "Type: IN LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the prefix to match.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: IN LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be examined.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsPrefixW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisprefixw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPrefix",
                    "type": "LPCWSTR",
                    "description": "Type: IN LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the prefix to match.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: IN LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be examined.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsRelativeA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisrelativea",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsRelativeW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisrelativew",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsRootA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisroota",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be validated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsRootW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisrootw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be validated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsSameRootA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathissameroota",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the first path to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the second path to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsSameRootW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathissamerootw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the first path to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the second path to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsSystemFolderA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathissystemfoldera",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the name of an existing folder. The attributes for this folder will be retrieved and compared with those that define a system folder. If this folder contains the attributes to make it a system folder, the function returns nonzero. If this value is NULL, this function determines if the attributes passed in dwAttrb qualify it to be a system folder.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrb",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes to be compared. Used only if pszPath is NULL. In that case, the attributes passed in this value are compared with those that qualify a folder as a system folder. If the attributes are sufficient to make this a system folder, this function returns nonzero. These attributes are the attributes that are returned from GetFileAttributes.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsSystemFolderW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathissystemfolderw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the name of an existing folder. The attributes for this folder will be retrieved and compared with those that define a system folder. If this folder contains the attributes to make it a system folder, the function returns nonzero. If this value is NULL, this function determines if the attributes passed in dwAttrb qualify it to be a system folder.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrb",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes to be compared. Used only if pszPath is NULL. In that case, the attributes passed in this value are compared with those that qualify a folder as a system folder. If the attributes are sufficient to make this a system folder, this function returns nonzero. These attributes are the attributes that are returned from GetFileAttributes.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisunca",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCServerA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisuncservera",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCServerShareA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisuncserversharea",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be validated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCServerShareW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisuncserversharew",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be validated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCServerW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisuncserverw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsUNCW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisuncw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsURLA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisurla",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the URL path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathIsURLW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathisurlw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the URL path to validate.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMakePrettyA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmakeprettya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be converted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMakePrettyW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmakeprettyw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be converted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMakeSystemFolderA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmakesystemfoldera",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the name of an existing folder that will be made into a system folder.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMakeSystemFolderW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmakesystemfolderw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the name of an existing folder that will be made into a system folder.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMatchSpecA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmatchspeca",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string that contains the path to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSpec",
                    "type": "LPCSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string that contains the file type for which to search. For example, to test whether pszFile is a .doc file, pszSpec should be set to \"*.doc\".",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMatchSpecExA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmatchspecexa",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the path from which the file name to be matched is taken.",
                    "possible_constants": []
                },
                {
                    "name": "pszSpec",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the file name pattern for which to search. This can be the exact name, or it can contain wildcard characters. If exactly one pattern is specified, set the PMSF_NORMAL flag in dwFlags. If more than one pattern is specified, separate them with semicolons and set the PMSF_MULTIPLE flag.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Modifies the search condition. The following are valid flags. The pszSpec parameter points to a single file name pattern to be matched. The pszSpec parameter points to a semicolon-delimited list of file name patterns to be matched. If PMSF_NORMAL is used, don't ignore leading spaces in the string pointed to by pszSpec. If PMSF_MULTIPLE is used, don't ignore leading spaces in each file type contained in the string pointed to by pszSpec. This flag can be combined with PMSF_NORMAL and PMSF_MULTIPLE.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMatchSpecExW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmatchspecexw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the path from which the file name to be matched is taken.",
                    "possible_constants": []
                },
                {
                    "name": "pszSpec",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the file name pattern for which to search. This can be the exact name, or it can contain wildcard characters. If exactly one pattern is specified, set the PMSF_NORMAL flag in dwFlags. If more than one pattern is specified, separate them with semicolons and set the PMSF_MULTIPLE flag.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Modifies the search condition. The following are valid flags. The pszSpec parameter points to a single file name pattern to be matched. The pszSpec parameter points to a semicolon-delimited list of file name patterns to be matched. If PMSF_NORMAL is used, don't ignore leading spaces in the string pointed to by pszSpec. If PMSF_MULTIPLE is used, don't ignore leading spaces in each file type contained in the string pointed to by pszSpec. This flag can be combined with PMSF_NORMAL and PMSF_MULTIPLE.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathMatchSpecW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathmatchspecw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCWSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string that contains the path to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSpec",
                    "type": "LPCWSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string that contains the file type for which to search. For example, to test whether pszFile is a .doc file, pszSpec should be set to \"*.doc\".",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathParseIconLocationA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathparseiconlocationa",
            "description": "",
            "parameters": [
                {
                    "name": "pszIconFile",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains a file location string. It should be in the form \"path,iconindex\". When the function returns, pszIconFile will point to the file's path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathParseIconLocationW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathparseiconlocationw",
            "description": "",
            "parameters": [
                {
                    "name": "pszIconFile",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains a file location string. It should be in the form \"path,iconindex\". When the function returns, pszIconFile will point to the file's path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathQuoteSpacesA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathquotespacesa",
            "description": "",
            "parameters": [
                {
                    "name": "lpsz",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string that contains the path to search. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathQuoteSpacesW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathquotespacesw",
            "description": "",
            "parameters": [
                {
                    "name": "lpsz",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string that contains the path to search. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRelativePathToA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathrelativepathtoa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszFrom",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path that defines the start of the relative path.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrFrom",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes of pszFrom. If this value contains FILE_ATTRIBUTE_DIRECTORY, pszFrom is assumed to be a directory; otherwise, pszFrom is assumed to be a file.",
                    "possible_constants": []
                },
                {
                    "name": "pszTo",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path that defines the endpoint of the relative path.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrTo",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes of pszTo. If this value contains FILE_ATTRIBUTE_DIRECTORY, pszTo is assumed to be directory; otherwise, pszTo is assumed to be a file.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRelativePathToW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathrelativepathtow",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszFrom",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path that defines the start of the relative path.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrFrom",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes of pszFrom. If this value contains FILE_ATTRIBUTE_DIRECTORY, pszFrom is assumed to be a directory; otherwise, pszFrom is assumed to be a file.",
                    "possible_constants": []
                },
                {
                    "name": "pszTo",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path that defines the endpoint of the relative path.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttrTo",
                    "type": "DWORD",
                    "description": "Type: DWORD The file attributes of pszTo. If this value contains FILE_ATTRIBUTE_DIRECTORY, pszTo is assumed to be directory; otherwise, pszTo is assumed to be a file.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveArgsA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveargsa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR Pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove arguments.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveArgsW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveargsw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR Pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove arguments.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveBackslashA",
            "return_type": "LPSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremovebackslasha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove the backslash.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveBackslashW",
            "return_type": "LPWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremovebackslashw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove the backslash.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveBlanksA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveblanksa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH from which to strip all leading and trailing spaces.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveBlanksW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveblanksw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH from which to strip all leading and trailing spaces.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveExtensionA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveextensiona",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH from which to remove the extension.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveExtensionW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremoveextensionw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH from which to remove the extension.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveFileSpecA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremovefilespeca",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove the file name.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRemoveFileSpecW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathremovefilespecw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path from which to remove the file name.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRenameExtensionA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathrenameextensiona",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR Pointer to a null-terminated string of length MAX_PATH in which to replace the extension.",
                    "possible_constants": []
                },
                {
                    "name": "pszExt",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR Pointer to a character buffer that contains a '.' character followed by the new extension.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathRenameExtensionW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathrenameextensionw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR Pointer to a null-terminated string of length MAX_PATH in which to replace the extension.",
                    "possible_constants": []
                },
                {
                    "name": "pszExt",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR Pointer to a character buffer that contains a '.' character followed by the new extension.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSearchAndQualifyA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathsearchandqualifya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search. [out] pszBuf Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be referenced.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size of the buffer pointed to by pszFullyQualifiedPath, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSearchAndQualifyW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathsearchandqualifyw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to search. [out] pszBuf Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be referenced.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size of the buffer pointed to by pszFullyQualifiedPath, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSetDlgItemPathA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathsetdlgitempatha",
            "description": "",
            "parameters": [
                {
                    "name": "hDlg",
                    "type": "HWND",
                    "description": "Type: HWND A handle to the dialog box or window.",
                    "possible_constants": []
                },
                {
                    "name": "id",
                    "type": "int",
                    "description": "Type: int The identifier of the control.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to set in the control.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSetDlgItemPathW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathsetdlgitempathw",
            "description": "",
            "parameters": [
                {
                    "name": "hDlg",
                    "type": "HWND",
                    "description": "Type: HWND A handle to the dialog box or window.",
                    "possible_constants": []
                },
                {
                    "name": "id",
                    "type": "int",
                    "description": "Type: int The identifier of the control.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to set in the control.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSkipRootA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathskiproota",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to parse.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathSkipRootW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathskiprootw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to parse.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathStripPathA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathstrippatha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path and file name. When this function returns successfully, the string contains only the file name, with the path removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathStripPathW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathstrippathw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path and file name. When this function returns successfully, the string contains only the file name, with the path removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathStripToRootA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathstriptoroota",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be converted. When this function returns successfully, this string contains only the root information taken from that path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathStripToRootW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathstriptorootw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path to be converted. When this function returns successfully, this string contains only the root information taken from that path.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUndecorateA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathundecoratea",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A null-terminated string of length MAX_PATH that contains the path. When the function returns, pszPath points to the undecorated string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUndecorateW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathundecoratew",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A null-terminated string of length MAX_PATH that contains the path. When the function returns, pszPath points to the undecorated string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnExpandEnvStringsA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunexpandenvstringsa",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be unexpanded. [out] pszBuf Type: LPTSTR A pointer to a buffer that, when this method returns successfully, receives the unexpanded string. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size, in characters, in the pszBuf buffer.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnExpandEnvStringsW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunexpandenvstringsw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the path to be unexpanded. [out] pszBuf Type: LPTSTR A pointer to a buffer that, when this method returns successfully, receives the unexpanded string. The size of this buffer must be set to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size, in characters, in the pszBuf buffer.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnmakeSystemFolderA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunmakesystemfoldera",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the name of an existing folder that will have the system folder attributes removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnmakeSystemFolderW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunmakesystemfolderw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of maximum length MAX_PATH that contains the name of an existing folder that will have the system folder attributes removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnquoteSpacesA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunquotespacesa",
            "description": "",
            "parameters": [
                {
                    "name": "lpsz",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path. When the function returns successfully, points to the string with beginning and ending quotation marks removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "PathUnquoteSpacesW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-pathunquotespacesw",
            "description": "",
            "parameters": [
                {
                    "name": "lpsz",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR A pointer to a null-terminated string of length MAX_PATH that contains the path. When the function returns successfully, points to the string with beginning and ending quotation marks removed.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "QISearch",
            "return_type": "HRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-qisearch",
            "description": "",
            "parameters": [
                {
                    "name": "*that",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pqit",
                    "type": "LPCQITAB",
                    "description": "Type: LPCQITAB An array of QITAB structures. The last structure in the array must have its piid member set to NULL and its dwOffset member set to 0.",
                    "possible_constants": []
                },
                {
                    "name": "riid",
                    "type": "REFIID",
                    "description": "Type: REFIID A reference to the IID of the interface to retrieve through ppv. [out] ppv Type: void** When this method returns successfully, contains the interface pointer requested in riid.",
                    "possible_constants": []
                },
                {
                    "name": "**ppv",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SetProcessReference",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-setprocessreference",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHAllocShared",
            "return_type": "HANDLE",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shallocshared",
            "description": "",
            "parameters": [
                {
                    "name": "*pvData",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwSize",
                    "type": "DWORD",
                    "description": "Type: DWORD The size, in bytes, of the memory block pointed to by pvData.",
                    "possible_constants": []
                },
                {
                    "name": "dwProcessId",
                    "type": "DWORD",
                    "description": "Type: DWORD The process ID of the process that will share memory block specified by pvData.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHAnsiToAnsi",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shansitoansi",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrc",
                    "type": "PCSTR",
                    "description": "Type: LPCSTR A pointer to a null-terminated ANSI string to be converted to Unicode. [out] pszDst Type: LPWSTR A pointer to a buffer that, when this function returns successfully, receives the characters copied from pszSrc. The buffer must be large enough to contain the number of characters specified by the cchBuf parameter, including a room for a terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "pszDst",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "int",
                    "description": " Type: int The number of characters that can be contained by the buffer pointed to by pszDst. This parameter must be greater than zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHAnsiToUnicode",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shansitounicode",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrc",
                    "type": "PCSTR",
                    "description": "Type: PCSTR A pointer to a null-terminated ANSI string to be converted to Unicode. [out] pwszDst Type: PWSTR A pointer to a buffer that, when this function returns successfully, receives the string specified by pszSrc, after the ANSI characters have been converted to Unicode (WCHAR). The buffer must be large enough to contain the number of Unicode characters specified by the cwchBuf parameter, including a terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "pwszDst",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cwchBuf",
                    "type": "int",
                    "description": " Type: int The number of Unicode characters that can be contained by the buffer pointed to by pwszDst. This parameter must be greater than zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHAutoComplete",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shautocomplete",
            "description": "",
            "parameters": [
                {
                    "name": "hwndEdit",
                    "type": "HWND",
                    "description": "Type: HWND The window handle of a system edit control. Typically, this parameter is the handle of an edit control or the edit control embedded in a ComboBoxEx control.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags to control the operation of SHAutoComplete. The first four flags are used to override the Internet Explorer registry settings. The user can change these settings manually by launching the Internet Options property sheet from the Tools menu and clicking the Advanced tab. Ignore the registry default and force the AutoAppend feature off. This flag must be used in combination with one or more of the SHACF_FILESYS* or SHACF_URL* flags. Ignore the registry value and force the AutoAppend feature on. The completed string will be displayed in the edit box with the added characters highlighted. This flag must be used in combination with one or more of the SHACF_FILESYS* or SHACF_URL* flags. Ignore the registry default and force the AutoSuggest feature off. This flag must be used in combination with one or more of the SHACF_FILESYS* or SHACF_URL* flags. Ignore the registry value and force the AutoSuggest feature on. A selection of possible completed strings will be displayed as a drop-down list, below the edit box. This flag must be used in combination with one or more of the SHACF_FILESYS* or SHACF_URL* flags. The default setting, equivalent to SHACF_FILESYSTEM | SHACF_URLALL. SHACF_DEFAULT cannot be combined with any other flags. Include the file system only. Include the file system and directories, UNC servers, and UNC server shares. Include the file system and the rest of the Shell (Desktop, Computer, and Control Panel, for example). Include the URLs in the users History and Recently Used lists. Equivalent to SHACF_URLHISTORY | SHACF_URLMRU. Include the URLs in the user's History list. Include the URLs in the user's Recently Used list. Allow the user to select from the autosuggest list by pressing the TAB key. If this flag is not set, pressing the TAB key will shift focus to the next control and close the autosuggest list. If SHACF_USETAB is set, pressing the TAB key will select the first item in the list. Pressing TAB again will select the next item in the list, and so on. When the user reaches the end of the list, the next TAB key press will cycle the focus back to the edit control. This flag must be used in combination with one or more of the SHACF_FILESYS* or SHACF_URL* flags listed on this page.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCopyKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcopykeya",
            "description": "",
            "parameters": [
                {
                    "name": "hkeySrc",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the source key (for example, HKEY_CURRENT_USER).",
                    "possible_constants": []
                },
                {
                    "name": "pszSrcSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The subkey whose subkeys and values are to be copied.",
                    "possible_constants": []
                },
                {
                    "name": "hkeyDest",
                    "type": "HKEY",
                    "description": "Type: HKEY The destination key.",
                    "possible_constants": []
                },
                {
                    "name": "fReserved",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Must be 0.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCopyKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcopykeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hkeySrc",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the source key (for example, HKEY_CURRENT_USER).",
                    "possible_constants": []
                },
                {
                    "name": "pszSrcSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The subkey whose subkeys and values are to be copied.",
                    "possible_constants": []
                },
                {
                    "name": "hkeyDest",
                    "type": "HKEY",
                    "description": "Type: HKEY The destination key.",
                    "possible_constants": []
                },
                {
                    "name": "fReserved",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Must be 0.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateMemStream",
            "return_type": "IStream *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatememstream",
            "description": "",
            "parameters": [
                {
                    "name": "*pInit",
                    "type": "const BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbInit",
                    "type": "UINT",
                    "description": "Type: UINT The number of bytes in the buffer pointed to by pInit. If pInit is set to NULL, cbInit must be zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateShellPalette",
            "return_type": "HPALETTE",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreateshellpalette",
            "description": "",
            "parameters": [
                {
                    "name": "hdc",
                    "type": "HDC",
                    "description": "Type: HDC The device context.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateStreamOnFileA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatestreamonfilea",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the file name.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD One or more STGM values that are used to specify the file access mode and how the object that exposes the stream is created and deleted. [out] ppstm Type: IStream** Receives an IStream interface pointer for the stream associated with the file.",
                    "possible_constants": []
                },
                {
                    "name": "**ppstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateStreamOnFileEx",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatestreamonfileex",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCWSTR",
                    "description": "Type: LPCWSTR A pointer to a null-terminated string that specifies the file name.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD One or more STGM values that are used to specify the file access mode and how the object that exposes the stream is created and deleted.",
                    "possible_constants": []
                },
                {
                    "name": "dwAttributes",
                    "type": "DWORD",
                    "description": "Type: DWORD One or more flag values that specify file attributes in the case that a new file is created. For a complete list of possible values, see the dwFlagsAndAttributes parameter of the CreateFile function.",
                    "possible_constants": []
                },
                {
                    "name": "fCreate",
                    "type": "BOOL",
                    "description": "Type: BOOL A BOOL value that helps specify, in conjunction with grfMode, how existing files should be treated when creating the stream. See Remarks for details. [in, optional] pstmTemplate Type: IStream* Reserved. [out] ppstm Type: IStream** Receives an IStream interface pointer for the stream associated with the file.",
                    "possible_constants": []
                },
                {
                    "name": "*pstmTemplate",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "**ppstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateStreamOnFileW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatestreamonfilew",
            "description": "",
            "parameters": [
                {
                    "name": "pszFile",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the file name.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD One or more STGM values that are used to specify the file access mode and how the object that exposes the stream is created and deleted. [out] ppstm Type: IStream** Receives an IStream interface pointer for the stream associated with the file.",
                    "possible_constants": []
                },
                {
                    "name": "**ppstm",
                    "type": "IStream",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateThread",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatethread",
            "description": "",
            "parameters": [
                {
                    "name": "pfnThreadProc",
                    "type": "LPTHREAD_START_ROUTINE",
                    "description": "Type: LPTHREAD_START_ROUTINE A pointer to an application-defined function of the LPTHREAD_START_ROUTINE type. If a new thread was successfully created, this application-defined function is called in the context of that thread. SHCreateThread does not wait for the function pointed to by this parameter to complete before returning to its caller.  The application-defined function's return value is the exit code of the thread. [in, optional] pData Type: void* A pointer to an optional application-defined data structure that contains initialization data. It is passed to the function pointed to by pfnThreadProc and, optionally, pfnCallback. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*pData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "flags",
                    "type": "SHCT_FLAGS",
                    "description": "Type: SHCT_FLAGS The flags that control the behavior of the function. One or more of the CTF constants.",
                    "possible_constants": []
                },
                {
                    "name": "pfnCallback",
                    "type": "LPTHREAD_START_ROUTINE",
                    "description": "Type: LPTHREAD_START_ROUTINE A pointer to an optional application-defined function of the\nLPTHREAD_START_ROUTINE type. This function is called\nin the context of the created thread before the function pointed to by\npfnThreadProc is called. It will also receive pData as\nits argument. SHCreateThread will wait for the\nfunction pointed to by pfnCallback to return before returning to its caller. The\nreturn value of the function pointed to by pfnCallback is ignored.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateThreadRef",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatethreadref",
            "description": "",
            "parameters": [
                {
                    "name": "*pcRef",
                    "type": "LONG",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "**ppunk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHCreateThreadWithHandle",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shcreatethreadwithhandle",
            "description": "",
            "parameters": [
                {
                    "name": "pfnThreadProc",
                    "type": "LPTHREAD_START_ROUTINE",
                    "description": "Type: LPTHREAD_START_ROUTINE A pointer to an application-defined function of type LPTHREAD_START_ROUTINE. If a new thread was successfully created, this application-defined function is called in the context of that thread. SHCreateThreadWithHandle does not wait for the function pointed to by pfnThreadProc to complete before returning to its caller. The return value for the function specified by pfnThreadProc is the exit code of the thread. [in, optional] pData Type: void* A pointer to an optional application-defined data structure that contains initialization data. It is passed to the function pointed to by pfnThreadProc and, optionally, the function pointed to by pfnCallback.",
                    "possible_constants": []
                },
                {
                    "name": "*pData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "flags",
                    "type": "SHCT_FLAGS",
                    "description": "Type: SHCT_FLAGS Flags that control the behavior of the function; one or more of the CTF constants.",
                    "possible_constants": []
                },
                {
                    "name": "pfnCallback",
                    "type": "LPTHREAD_START_ROUTINE",
                    "description": "Type: LPTHREAD_START_ROUTINE A pointer to an optional application-defined function of type LPTHREAD_START_ROUTINE. This function is called in the context of the created thread before the function pointed to by pfnThreadProc is called. It will also receive pData as its argument. SHCreateThreadWithHandle waits for the function pointed to by pfnCallback to complete before returning to its caller. The return value for the function specified by pfnCallback is ignored. [out, optional] pHandle Type: HANDLE* A pointer to the HANDLE of the created thread. When it is no longer needed, this handle should be closed by calling the CloseHandle function. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*pHandle",
                    "type": "HANDLE",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteEmptyKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeleteemptykeya",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to an open registry key, or one of the following predefined keys:",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string specifying the name of the key to delete.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteEmptyKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeleteemptykeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to an open registry key, or one of the following predefined keys:",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string specifying the name of the key to delete.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeletekeya",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to an open registry key, or one of the following predefined keys:",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string specifying the name of the key to delete.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeletekeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to an open registry key, or one of the following predefined keys:",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string specifying the name of the key to delete.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeletevaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": " Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": " Type: LPCTSTR The address of a null-terminated string specifying the name of the subkey for which to change the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": " Type: LPCTSTR The address of the value to be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHDeleteValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shdeletevaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": " Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": " Type: LPCTSTR The address of a null-terminated string specifying the name of the subkey for which to change the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": " Type: LPCTSTR The address of the value to be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHEnumKeyExA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shenumkeyexa",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": " Type: DWORD The index of the subkey to retrieve. This parameter should be zero for the first call and incremented for subsequent calls.",
                    "possible_constants": []
                },
                {
                    "name": "pszName",
                    "type": "LPSTR",
                    "description": " Type: LPTSTR The address of a character buffer that receives the enumerated key name.",
                    "possible_constants": []
                },
                {
                    "name": "pcchName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pszName, in characters. On exit, this contains the number of characters that were copied to pszName.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHEnumKeyExW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shenumkeyexw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": " Type: DWORD The index of the subkey to retrieve. This parameter should be zero for the first call and incremented for subsequent calls.",
                    "possible_constants": []
                },
                {
                    "name": "pszName",
                    "type": "LPWSTR",
                    "description": " Type: LPTSTR The address of a character buffer that receives the enumerated key name.",
                    "possible_constants": []
                },
                {
                    "name": "pcchName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pszName, in characters. On exit, this contains the number of characters that were copied to pszName.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHEnumValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shenumvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the value to retrieve. This parameter should be zero for the first call and incremented for subsequent calls.",
                    "possible_constants": []
                },
                {
                    "name": "pszValueName",
                    "type": "PSTR",
                    "description": " Type: LPTSTR The address of a character buffer that receives the enumerated value name. The size of this buffer is specified in pcchValueName.",
                    "possible_constants": []
                },
                {
                    "name": "pcchValueName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pszValueName, in characters. On exit, this contains the number of characters that were copied to pszValueName. [out, optional] pdwType Type: LPDWORD The address of a DWORD that receives the data type of the value. These are the same values as those described under the lpType parameter of RegEnumValue. pvData Type: LPVOID The address of a buffer that receives the data for the value entry. The size of this buffer is specified in pcbData. This parameter can be NULL if the data is not required.",
                    "possible_constants": []
                },
                {
                    "name": "pdwType",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcbData",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pvData, in bytes. On exit, this contains the number of bytes that were copied to pvData.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHEnumValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shenumvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the value to retrieve. This parameter should be zero for the first call and incremented for subsequent calls.",
                    "possible_constants": []
                },
                {
                    "name": "pszValueName",
                    "type": "PWSTR",
                    "description": " Type: LPTSTR The address of a character buffer that receives the enumerated value name. The size of this buffer is specified in pcchValueName.",
                    "possible_constants": []
                },
                {
                    "name": "pcchValueName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pszValueName, in characters. On exit, this contains the number of characters that were copied to pszValueName. [out, optional] pdwType Type: LPDWORD The address of a DWORD that receives the data type of the value. These are the same values as those described under the lpType parameter of RegEnumValue. pvData Type: LPVOID The address of a buffer that receives the data for the value entry. The size of this buffer is specified in pcbData. This parameter can be NULL if the data is not required.",
                    "possible_constants": []
                },
                {
                    "name": "pdwType",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcbData",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD The address of a DWORD that, on entry, contains the size of the buffer at pvData, in bytes. On exit, this contains the number of bytes that were copied to pvData.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHFormatDateTimeA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shformatdatetimea",
            "description": "",
            "parameters": [
                {
                    "name": "*pft",
                    "type": "const FILETIME",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pdwFlags",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The number of TCHARs that can be contained by the buffer pointed to by pszBuf.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHFormatDateTimeW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shformatdatetimew",
            "description": "",
            "parameters": [
                {
                    "name": "*pft",
                    "type": "const FILETIME",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pdwFlags",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The number of TCHARs that can be contained by the buffer pointed to by pszBuf.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHFreeShared",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shfreeshared",
            "description": "",
            "parameters": [
                {
                    "name": "hData",
                    "type": "HANDLE",
                    "description": "Type: HANDLE A handle to the mapped memory.",
                    "possible_constants": []
                },
                {
                    "name": "dwProcessId",
                    "type": "DWORD",
                    "description": "Type: DWORD The process ID of the process from which the memory was allocated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetAssocKeys",
            "return_type": "DWORD",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetassockeys",
            "description": "",
            "parameters": [
                {
                    "name": "*pqa",
                    "type": "IQueryAssociations",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*rgKeys",
                    "type": "HKEY",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cKeys",
                    "type": "DWORD",
                    "description": " The number of elements in the rgKeys array. If you are interested in only the primary class subkey, set this value to 1.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetInverseCMAP",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetinversecmap",
            "description": "",
            "parameters": [
                {
                    "name": "*pbMap",
                    "type": "BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbMap",
                    "type": "ULONG",
                    "description": "Type: ULONG The size of the buffer pointed to by pbMap, which also defines its contents. Two values are recognized. The buffer pointed to by pbMap receives a pointer to a cached copy of the inverse color map table. The buffer pointed to by pbMap receives a copy of the inverse color map table. The buffer must be exactly 32,768 bytes in size.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetThreadRef",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetthreadref",
            "description": "",
            "parameters": [
                {
                    "name": "**ppunk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the name of the subkey from which to retrieve the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of the value. [out, optional] pdwType Type: LPDWORD The type of value. For more information, see Registry Data Types. [out, optional] pvData Type: LPVOID The address of the destination data buffer. [in, out, optional] pcbData Type: LPDWORD The size of the destination data buffer.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the name of the subkey from which to retrieve the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of the value. [out, optional] pdwType Type: LPDWORD The type of value. For more information, see Registry Data Types. [out, optional] pvData Type: LPVOID The address of the destination data buffer. [in, out, optional] pcbData Type: LPDWORD The size of the destination data buffer.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGetViewStatePropertyBag",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shgetviewstatepropertybag",
            "description": "",
            "parameters": [
                {
                    "name": "pidl",
                    "type": "PCIDLIST_ABSOLUTE",
                    "description": "Type: PCIDLIST_ABSOLUTE A PIDL of the folder for which you are requesting properties. This parameter must be NULL if the SHGVSPB_ALLFOLDERS flag is passed.",
                    "possible_constants": []
                },
                {
                    "name": "pszBagName",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a string that contains the name of the requested property bag.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD A value that specifies a combination of the following flags. One value from the following set of flags is required. Returns the per-user properties for the specified pidl. Returns the All User properties for the specified pidl. One value from the following set of flags is required. Returns the property bag for the folder specified by the pidl parameter. Returns the property bag that applies to all folders. Returns the property bag used to provide defaults for subfolders that do not have their property bag. The following flags are optional. Allows the property bag to roam. See Roaming User Profiles. This flag cannot be combined with SHGVSPB_ALLFOLDERS. Suppresses the search for a suitable default when the property bag cannot be found for the specified folder. By default, if SHGVSPB_INHERIT is not specified and a property bag cannot be found for the specified folder, the system searches for identically named property bags in other locations that may be able to provide default values. For example, the system searches in the ancestors of the folder to see if any of them provide a SHGVSPB_INHERIT property bag. Other places the system searches are in the user defaults and the global defaults. The following set of flags consists of values that combine some flags listed above, and are used for brevity and convenience. Combines SHGVSPB_PERUSER and SHGVSPB_PERFOLDER. Combines SHGVSPB_PERUSER, SHGVSPB_PERFOLDER, and SHGVSPB_NOAUTODEFAULTS. Combines SHGVSPB_PERUSER and SHGVSPB_ALLFOLDERS. Combines SHGVSPB_ALLUSERS and SHGVSPB_ALLFOLDERS. Windows Server\u00a02008, Windows\u00a0Vista, Windows Server\u00a02003 and Windows\u00a0XP:\u00a0\u00a0This flag is named SHGVSPB_GLOBALDEAFAULTS.",
                    "possible_constants": []
                },
                {
                    "name": "riid",
                    "type": "REFIID",
                    "description": "Type: REFIID A reference to the IID of the interface to retrieve through ppv. [out] ppv Type: void** When this method returns successfully, contains the interface pointer requested in riid.",
                    "possible_constants": []
                },
                {
                    "name": "**ppv",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGlobalCounterDecrement",
            "return_type": "long",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shglobalcounterdecrement",
            "description": "",
            "parameters": [
                {
                    "name": "id",
                    "type": "const SHGLOBALCOUNTER",
                    "description": "Type: const SHGLOBALCOUNTER The SHGLOBALCOUNTER to decrement.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGlobalCounterGetValue",
            "return_type": "long",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shglobalcountergetvalue",
            "description": "",
            "parameters": [
                {
                    "name": "id",
                    "type": "const SHGLOBALCOUNTER",
                    "description": "Type: const SHGLOBALCOUNTER The SHGLOBALCOUNTER for which to retrieve the current value.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHGlobalCounterIncrement",
            "return_type": "long",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shglobalcounterincrement",
            "description": "",
            "parameters": [
                {
                    "name": "id",
                    "type": "const SHGLOBALCOUNTER",
                    "description": "Type: const SHGLOBALCOUNTER The SHGLOBALCOUNTER to increment.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHIsLowMemoryMachine",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shislowmemorymachine",
            "description": "",
            "parameters": [
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of machine being examined. The following is the only recognized value. An older (circa 1997), low-end machine. Since system resources in general were lower on these older machines, the low-memory threshold is accordingly lower.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHLoadIndirectString",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shloadindirectstring",
            "description": "",
            "parameters": [
                {
                    "name": "pszSource",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a buffer that contains the indirect string from which the resource will be retrieved. This string should begin with the '@' symbol and use one of the forms discussed in the Remarks section. This function will successfully accept a string that does not begin with an '@' symbol, but the string will be simply passed unchanged to pszOutBuf. [out] pszOutBuf Type: PWSTR A pointer to a buffer that, when this function returns successfully, receives the text resource. Both pszOutBuf and pszSource can point to the same buffer, in which case the original string will be overwritten.",
                    "possible_constants": []
                },
                {
                    "name": "pszOutBuf",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchOutBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size of the buffer pointed to by pszOutBuf, in characters. ppvReserved Type: void** Not used; set to NULL.",
                    "possible_constants": []
                },
                {
                    "name": "**ppvReserved",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHLocalStrDupA",
            "return_type": "HRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shlocalstrdupa",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCSTR",
                    "description": " Type: PCTSTR A pointer to a null-terminated, Unicode string to be copied. [out, optional] ppsz Type: PTSTR* The address of a pointer to an allocated string that, when this function returns successfully, receives the result. SHLocalStrDup allocates memory for this string with LocalAlloc. You should free the string with LocalFree when it is no longer needed.",
                    "possible_constants": []
                },
                {
                    "name": "*ppsz",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHLocalStrDupW",
            "return_type": "HRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shlocalstrdupw",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCWSTR",
                    "description": " Type: PCTSTR A pointer to a null-terminated, Unicode string to be copied. [out, optional] ppsz Type: PTSTR* The address of a pointer to an allocated string that, when this function returns successfully, receives the result. SHLocalStrDup allocates memory for this string with LocalAlloc. You should free the string with LocalFree when it is no longer needed.",
                    "possible_constants": []
                },
                {
                    "name": "*ppsz",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHLockShared",
            "return_type": "void *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shlockshared",
            "description": "",
            "parameters": [
                {
                    "name": "hData",
                    "type": "HANDLE",
                    "description": "Type: HANDLE A handle to the memory you want to map into the calling process.",
                    "possible_constants": []
                },
                {
                    "name": "dwProcessId",
                    "type": "DWORD",
                    "description": "Type: DWORD The process ID of the process from which you want to map the block of memory.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHMessageBoxCheckA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shmessageboxchecka",
            "description": "",
            "parameters": [
                {
                    "name": "hwnd",
                    "type": "HWND",
                    "description": "Type: HWND The window handle to the message box's owner. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszText",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the message to be displayed.",
                    "possible_constants": []
                },
                {
                    "name": "pszCaption",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the title of the message box. If this parameter is set to NULL, the title is set to Error!.",
                    "possible_constants": []
                },
                {
                    "name": "uType",
                    "type": "UINT",
                    "description": " Type: UINT The flags that specify the contents and behavior of the message box. This function supports only a subset of the flags supported by MessageBox. If you use any flags that are not listed below, the function's behavior is undefined. You must specify the buttons to be displayed by setting one and only one of the following flags. Display a message box with OK and Cancel buttons. Display a message box with Yes and No buttons. Display a message box with an OK button. You can display an optional icon by setting one and only one of the following flags. Display a stop-sign icon. Display a question-mark icon. Display an exclamation-point icon. Display an icon with a lowercase \"i\" in a circle.",
                    "possible_constants": []
                },
                {
                    "name": "iDefault",
                    "type": "int",
                    "description": " Type: int The value that the function returns when the user has opted not to have the message box displayed again. If the user has not opted to suppress the message box, the message box is displayed and the function ignores iDefault.",
                    "possible_constants": []
                },
                {
                    "name": "pszRegVal",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains a unique string value to associate with this message. To avoid collisions with values used by Microsoft, this string should include a GUID. This string must not exceed REGSTR_MAX_VALUE_LENGTH characters in length, including the terminating null character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHMessageBoxCheckW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shmessageboxcheckw",
            "description": "",
            "parameters": [
                {
                    "name": "hwnd",
                    "type": "HWND",
                    "description": "Type: HWND The window handle to the message box's owner. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszText",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the message to be displayed.",
                    "possible_constants": []
                },
                {
                    "name": "pszCaption",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the title of the message box. If this parameter is set to NULL, the title is set to Error!.",
                    "possible_constants": []
                },
                {
                    "name": "uType",
                    "type": "UINT",
                    "description": " Type: UINT The flags that specify the contents and behavior of the message box. This function supports only a subset of the flags supported by MessageBox. If you use any flags that are not listed below, the function's behavior is undefined. You must specify the buttons to be displayed by setting one and only one of the following flags. Display a message box with OK and Cancel buttons. Display a message box with Yes and No buttons. Display a message box with an OK button. You can display an optional icon by setting one and only one of the following flags. Display a stop-sign icon. Display a question-mark icon. Display an exclamation-point icon. Display an icon with a lowercase \"i\" in a circle.",
                    "possible_constants": []
                },
                {
                    "name": "iDefault",
                    "type": "int",
                    "description": " Type: int The value that the function returns when the user has opted not to have the message box displayed again. If the user has not opted to suppress the message box, the message box is displayed and the function ignores iDefault.",
                    "possible_constants": []
                },
                {
                    "name": "pszRegVal",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains a unique string value to associate with this message. To avoid collisions with values used by Microsoft, this string should include a GUID. This string must not exceed REGSTR_MAX_VALUE_LENGTH characters in length, including the terminating null character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHOpenRegStream2A",
            "return_type": "IStream *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shopenregstream2a",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY Required. The subtree, such as HKEY_LOCAL_MACHINE, that contains the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubkey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR Optional. Pointer to a null-terminated string that specifies the subkey that contains the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR Pointer to a null-terminated string that specifies the value to be accessed. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of access for the stream. This can be one of the following values: Open the stream for reading. Open the stream for writing. Open the stream for reading and writing.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHOpenRegStream2W",
            "return_type": "IStream *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shopenregstream2w",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY Required. The subtree, such as HKEY_LOCAL_MACHINE, that contains the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubkey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR Optional. Pointer to a null-terminated string that specifies the subkey that contains the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR Pointer to a null-terminated string that specifies the value to be accessed. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of access for the stream. This can be one of the following values: Open the stream for reading. Open the stream for writing. Open the stream for reading and writing.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHOpenRegStreamA",
            "return_type": "IStream *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shopenregstreama",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY Required. The subtree, such as HKEY_LOCAL_MACHINE, that contains the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubkey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR Optional. Pointer to a null-terminated string that specifies the subkey that contains the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR Pointer to a null-terminated string that specifies the value to be accessed. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of access for the stream. This can be one of the following values: Open the stream for reading. Open the stream for writing. Open the stream for both reading and writing.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHOpenRegStreamW",
            "return_type": "IStream *",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shopenregstreamw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY Required. The subtree, such as HKEY_LOCAL_MACHINE, that contains the value.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubkey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR Optional. Pointer to a null-terminated string that specifies the subkey that contains the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR Pointer to a null-terminated string that specifies the value to be accessed. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "grfMode",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of access for the stream. This can be one of the following values: Open the stream for reading. Open the stream for writing. Open the stream for both reading and writing.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHQueryInfoKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shqueryinfokeya",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values. [out, optional] pcSubKeys Type: LPDWORD The address of a DWORD that receives the number of subkeys under the specified key. [out, optional] pcchMaxSubKeyLen Type: LPDWORD The address of a DWORD that receives the number of characters in the name of the subkey with the largest name. [out, optional] pcValues Type: LPDWORD The address of a DWORD that receives the number of values under the specified key. [out, optional] pcchMaxValueNameLen Type: LPDWORD The address of a DWORD that receives the number of characters in the name of the value with the largest name.",
                    "possible_constants": []
                },
                {
                    "name": "pcSubKeys",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxSubKeyLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcValues",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxValueNameLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHQueryInfoKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shqueryinfokeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values. [out, optional] pcSubKeys Type: LPDWORD The address of a DWORD that receives the number of subkeys under the specified key. [out, optional] pcchMaxSubKeyLen Type: LPDWORD The address of a DWORD that receives the number of characters in the name of the subkey with the largest name. [out, optional] pcValues Type: LPDWORD The address of a DWORD that receives the number of values under the specified key. [out, optional] pcchMaxValueNameLen Type: LPDWORD The address of a DWORD that receives the number of characters in the name of the value with the largest name.",
                    "possible_constants": []
                },
                {
                    "name": "pcSubKeys",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxSubKeyLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcValues",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxValueNameLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHQueryValueExA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shqueryvalueexa",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of the null-terminated string that contains the name of the value to be queried. pdwReserved Type: LPDWORD Reserved. Must be NULL. [out, optional] pdwType Type: LPDWORD The address of the variable that receives the key's value type. For more information, see Registry Data Types. [out, optional] pvData Type: LPVOID The address of the buffer that receives the value's data. This parameter can be NULL if the data is not required. [in, out, optional] pcbData Type: LPDWORD The address of the variable that specifies the size, in bytes, of the buffer pointed to by the pvData parameter. When the function returns, this variable contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwReserved",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHQueryValueExW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shqueryvalueexw",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of the null-terminated string that contains the name of the value to be queried. pdwReserved Type: LPDWORD Reserved. Must be NULL. [out, optional] pdwType Type: LPDWORD The address of the variable that receives the key's value type. For more information, see Registry Data Types. [out, optional] pvData Type: LPVOID The address of the buffer that receives the value's data. This parameter can be NULL if the data is not required. [in, out, optional] pcbData Type: LPDWORD The address of the variable that specifies the size, in bytes, of the buffer pointed to by the pvData parameter. When the function returns, this variable contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwReserved",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegCloseUSKey",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregcloseuskey",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegCreateUSKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregcreateuskeya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the subkey to be created or opened. If a value with this name is already present in the subkey, it will be opened.",
                    "possible_constants": []
                },
                {
                    "name": "samDesired",
                    "type": "REGSAM",
                    "description": "Type: REGSAM The desired security access. For more information on security access, see REGSAM.",
                    "possible_constants": []
                },
                {
                    "name": "hRelativeUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY The key to be used as a base for relative paths. If pszPath is a relative path, the key it specifies will be relative to hRelativeUSKey. If pszPath is an absolute path, set hRelativeUSKey to NULL. The key will then be created under HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER, depending the value of dwFlags. [out] phNewUSKey Type: PHUSKEY A pointer to an HUSKEY that will receive the handle to the new key.",
                    "possible_constants": []
                },
                {
                    "name": "phNewUSKey",
                    "type": "PHUSKEY",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD The base key under which the key should be opened. This can be one or more of the following values. Create/open the key under HKEY_CURRENT_USER. Only creates a key if it is empty. Create/open the key under HKEY_CURRENT_USER. Creates a key even if it is not empty. Create/open the key under HKEY_LOCAL_MACHINE. Only creates a key if it is empty. Create/open the key under HKEY_LOCAL_MACHINE. Creates a key even if it is not empty. Create/open the key under both HKEY_CURRENT_USER (forced) and HKEY_LOCAL_MACHINE (only if empty). This flag is the equivalent of (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegCreateUSKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregcreateuskeyw",
            "description": "",
            "parameters": [
                {
                    "name": "pwzPath",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "samDesired",
                    "type": "REGSAM",
                    "description": "Type: REGSAM The desired security access. For more information on security access, see REGSAM.",
                    "possible_constants": []
                },
                {
                    "name": "hRelativeUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY The key to be used as a base for relative paths. If pszPath is a relative path, the key it specifies will be relative to hRelativeUSKey. If pszPath is an absolute path, set hRelativeUSKey to NULL. The key will then be created under HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER, depending the value of dwFlags. [out] phNewUSKey Type: PHUSKEY A pointer to an HUSKEY that will receive the handle to the new key.",
                    "possible_constants": []
                },
                {
                    "name": "phNewUSKey",
                    "type": "PHUSKEY",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD The base key under which the key should be opened. This can be one or more of the following values. Create/open the key under HKEY_CURRENT_USER. Only creates a key if it is empty. Create/open the key under HKEY_CURRENT_USER. Creates a key even if it is not empty. Create/open the key under HKEY_LOCAL_MACHINE. Only creates a key if it is empty. Create/open the key under HKEY_LOCAL_MACHINE. Creates a key even if it is not empty. Create/open the key under both HKEY_CURRENT_USER (forced) and HKEY_LOCAL_MACHINE (only if empty). This flag is the equivalent of (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegDeleteEmptyUSKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregdeleteemptyuskeya",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCSTR A pointer to  the null-terminated string that specifies the empty user-defined registry subkey to be deleted.",
                    "possible_constants": []
                },
                {
                    "name": "delRegFlags",
                    "type": "SHREGDEL_FLAGS",
                    "description": "Type: SHREGDEL_FLAGS One of the SHREGDEL_FLAGS that specifies from which base key the subkey will be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegDeleteEmptyUSKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregdeleteemptyuskeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pwzSubKey",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "delRegFlags",
                    "type": "SHREGDEL_FLAGS",
                    "description": "Type: SHREGDEL_FLAGS One of the SHREGDEL_FLAGS that specifies from which base key the subkey will be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegDeleteUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregdeleteusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the null-terminated string that names the value to remove.",
                    "possible_constants": []
                },
                {
                    "name": "delRegFlags",
                    "type": "SHREGDEL_FLAGS",
                    "description": "Type: SHREGDEL_FLAGS One of the SHREGDEL_FLAGS that specifies from which base key the value will be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegDeleteUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregdeleteusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pwzValue",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "delRegFlags",
                    "type": "SHREGDEL_FLAGS",
                    "description": "Type: SHREGDEL_FLAGS One of the SHREGDEL_FLAGS that specifies from which base key the value will be deleted.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegDuplicateHKey",
            "return_type": "HKEY",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregduplicatehkey",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY The HKEY handle to be duplicated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegEnumUSKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregenumuskeya",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the subkey to retrieve. This parameter should be zero for the first call and incremented for subsequent calls. [out] pszName Type: LPTSTR A pointer to a character buffer that receives the enumerated key name.",
                    "possible_constants": []
                },
                {
                    "name": "pszName",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to  a DWORD that, on entry, contains the size of the buffer at pszName, in characters. On exit, this contains the number of characters that were copied to pszName.",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS A SHREGENUM_FLAGS that specifies the base key in which the enumeration should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegEnumUSKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregenumuskeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the subkey to retrieve. This parameter should be zero for the first call and incremented for subsequent calls.",
                    "possible_constants": []
                },
                {
                    "name": "pwzName",
                    "type": "LPWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "pcchName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to  a DWORD that, on entry, contains the size of the buffer at pszName, in characters. On exit, this contains the number of characters that were copied to pszName.",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS A SHREGENUM_FLAGS that specifies the base key in which the enumeration should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegEnumUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregenumusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hUSkey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the value to retrieve. This parameter should be zero for the first call and incremented for subsequent calls. [out] pszValueName Type: LPTSTR A pointer to a character buffer that receives the enumerated value name. The size of this buffer is specified in pcchValueNameLen.",
                    "possible_constants": []
                },
                {
                    "name": "pszValueName",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchValueName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the buffer at pszValueName, in characters. On exit, this contains the number of characters that were copied to pszValueName. [out, optional] pdwType Type: LPDWORD A pointer to a DWORD that receives the data type of the value. These are the same values as those described under the lpType parameter of RegEnumValue. [out, optional] pvData Type: void* A pointer to a buffer that receives the data for the value entry. The size of this buffer is specified in pcbData. This parameter can be NULL if the data is not required.",
                    "possible_constants": []
                },
                {
                    "name": "pdwType",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcbData",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the buffer at pvData. On exit, this contains the number of bytes that were copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS One of the SHREGENUM_FLAGS that specifies the base key in which the enumeration should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegEnumUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregenumusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hUSkey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "dwIndex",
                    "type": "DWORD",
                    "description": "Type: DWORD The index of the value to retrieve. This parameter should be zero for the first call and incremented for subsequent calls. [out] pszValueName Type: LPTSTR A pointer to a character buffer that receives the enumerated value name. The size of this buffer is specified in pcchValueNameLen.",
                    "possible_constants": []
                },
                {
                    "name": "pszValueName",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchValueName",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the buffer at pszValueName, in characters. On exit, this contains the number of characters that were copied to pszValueName. [out, optional] pdwType Type: LPDWORD A pointer to a DWORD that receives the data type of the value. These are the same values as those described under the lpType parameter of RegEnumValue. [out, optional] pvData Type: void* A pointer to a buffer that receives the data for the value entry. The size of this buffer is specified in pcbData. This parameter can be NULL if the data is not required.",
                    "possible_constants": []
                },
                {
                    "name": "pdwType",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcbData",
                    "type": "LPDWORD",
                    "description": "Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the buffer at pvData. On exit, this contains the number of bytes that were copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS One of the SHREGENUM_FLAGS that specifies the base key in which the enumeration should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetBoolUSValueA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetboolusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey relative to HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER. For example, \"Software\\MyCompany\\MyProduct\".",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the name of the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL A variable that specifies which key to look under. When set to TRUE, SHRegGetUSValue ignores HKEY_CURRENT_USER and returns a value from HKEY_LOCAL_MACHINE.",
                    "possible_constants": []
                },
                {
                    "name": "fDefault",
                    "type": "BOOL",
                    "description": "Type: BOOL A value that is returned if there is no registry value.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetBoolUSValueW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetboolusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey relative to HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER. For example, \"Software\\MyCompany\\MyProduct\".",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the name of the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL A variable that specifies which key to look under. When set to TRUE, SHRegGetUSValue ignores HKEY_CURRENT_USER and returns a value from HKEY_LOCAL_MACHINE.",
                    "possible_constants": []
                },
                {
                    "name": "fDefault",
                    "type": "BOOL",
                    "description": "Type: BOOL A value that is returned if there is no registry value.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetBoolValueFromHKCUHKLM",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetboolvaluefromhkcuhklm",
            "description": "",
            "parameters": [
                {
                    "name": "pszKey",
                    "type": "PCWSTR",
                    "description": " Type: PCWSTR A pointer to a null-terminated Unicode string that specifies the path to the key to be checked.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated Unicode string that specifies the value to be evaluated.",
                    "possible_constants": []
                },
                {
                    "name": "fDefault",
                    "type": "BOOL",
                    "description": "Type: BOOL The expected state of the evaluation, as defined by the calling function.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetIntW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetintw",
            "description": "",
            "parameters": [
                {
                    "name": "hk",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the registry key that specifies the value to be read.",
                    "possible_constants": []
                },
                {
                    "name": "pwzKey",
                    "type": "PCWSTR",
                    "description": "Type: LPCWSTR A pointer to a string value that specifies the name of the value to be read. The string must be null-terminated.",
                    "possible_constants": []
                },
                {
                    "name": "iDefault",
                    "type": "int",
                    "description": "Type: int An int that specifies the value returned if the registry value cannot be retrieved successfully.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetPathA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetpatha",
            "description": "",
            "parameters": [
                {
                    "name": "hKey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to a key that is currently open, or a registry root key.",
                    "possible_constants": []
                },
                {
                    "name": "pcszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the subkey.",
                    "possible_constants": []
                },
                {
                    "name": "pcszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the value that holds the unexpanded path string. [out] pszPath Type: LPTSTR A buffer to hold the expanded path. You should set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetPathW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetpathw",
            "description": "",
            "parameters": [
                {
                    "name": "hKey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to a key that is currently open, or a registry root key.",
                    "possible_constants": []
                },
                {
                    "name": "pcszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the subkey.",
                    "possible_constants": []
                },
                {
                    "name": "pcszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the value that holds the unexpanded path string. [out] pszPath Type: LPTSTR A buffer to hold the expanded path. You should set the size of this buffer to MAX_PATH to ensure that it is large enough to hold the returned string.",
                    "possible_constants": []
                },
                {
                    "name": "pszPath",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey relative to HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER. For example: \"Software\\MyCompany\\MyProduct\".",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the value. This value can be NULL. [in, out, optional] pdwType Type: DWORD* A pointer to a DWORD that receives the type of data stored in the retrieved value. When using default values, the input pdwType is the type of the default value. For possible values, see Registry Data Types. If type information is not required, this parameter can be NULL. [out, optional] pvData Type: void* A pointer to a buffer that receives the value's data. [in, out, optional] pcbData Type: DWORD* A pointer to a variable that specifies the size, in bytes, of the buffer pointed to by pvData. When SHRegGetUSValue returns, pcbData contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL A variable that specifies which key to look under. When set to TRUE, SHRegGetUSValue ignores HKEY_CURRENT_USER and returns the value from the key under HKEY_LOCAL_MACHINE. [in, optional] pvDefaultData Type: void* A pointer to a buffer that receives the value's default data.",
                    "possible_constants": []
                },
                {
                    "name": "*pvDefaultData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwDefaultDataSize",
                    "type": "DWORD",
                    "description": "Type: DWORD The length, in bytes, of the buffer pointed to by pvDefaultData.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey relative to HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER. For example: \"Software\\MyCompany\\MyProduct\".",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the value. This value can be NULL. [in, out, optional] pdwType Type: DWORD* A pointer to a DWORD that receives the type of data stored in the retrieved value. When using default values, the input pdwType is the type of the default value. For possible values, see Registry Data Types. If type information is not required, this parameter can be NULL. [out, optional] pvData Type: void* A pointer to a buffer that receives the value's data. [in, out, optional] pcbData Type: DWORD* A pointer to a variable that specifies the size, in bytes, of the buffer pointed to by pvData. When SHRegGetUSValue returns, pcbData contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL A variable that specifies which key to look under. When set to TRUE, SHRegGetUSValue ignores HKEY_CURRENT_USER and returns the value from the key under HKEY_LOCAL_MACHINE. [in, optional] pvDefaultData Type: void* A pointer to a buffer that receives the value's default data.",
                    "possible_constants": []
                },
                {
                    "name": "*pvDefaultData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwDefaultDataSize",
                    "type": "DWORD",
                    "description": "Type: DWORD The length, in bytes, of the buffer pointed to by pvDefaultData.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the relative path from hkey to the subkey to retrieve the value from. This parameter can be NULL or an empty string, in which case the data is retrieved from the hkey location.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the value. This parameter can be NULL or an empty string, in which case the data is retrieved from the Default value.",
                    "possible_constants": []
                },
                {
                    "name": "srrfFlags",
                    "type": "SRRF",
                    "description": "Type: SRRF One or more of the SRRF flags that restricts the data to be retrieved. At least one type restriction (SRRF_RT) value must be specified. [in, out] pdwType Type: LPDWORD A pointer to a DWORD that receives the type of data stored in the retrieved value. When using default values, the input pdwType is the type of the default value. For possible values, see Registry Data Types. If the SRRF_NOEXPAND flag is not set, REG_EXPAND_SZ types are automatically expanded and returned as REG_SZ. If type information is not required, this parameter can be NULL. [out] pvData Type: LPVOID A pointer to a buffer that receives the value's data. This parameter can be NULL if the data is not needed. For example, if you were testing only for a value's existence, the specific value data would be superfluous. [in, out] pcbData Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the destination data buffer pvData, in bytes. This value can be NULL only if pvData is NULL. On exit, pcbData points to one of these values.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetValueFromHKCUHKLM",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetvaluefromhkcuhklm",
            "description": "",
            "parameters": [
                {
                    "name": "pwszKey",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated Unicode string that specifies the path to the registry key.",
                    "possible_constants": []
                },
                {
                    "name": "pwszValue",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated Unicode string that specifies the key value. This value can be NULL, in which case data is retrieved from the Default value.",
                    "possible_constants": []
                },
                {
                    "name": "srrfFlags",
                    "type": "SRRF",
                    "description": "Type: SRRF The SRRF flag constants. If more than one flag is used they can be combined using a bitwise OR. These flags are used to restrict the type of data returned. This value cannot be 0. [out] pdwType Type: DWORD* When this function returns, contains a pointer to a DWORD which receives a code that indicates the type of data stored in the specified value.  This can be set to NULL if no type information is wanted. If this value is not NULL, and the SRRF_NOEXPAND flag has not been set, data types of REG_EXPAND_SZ will be returned as REG_SZ since they are automatically expanded in this method. [in] pvData Type: LPCVOID A pointer to a buffer that contains the value's data. This parameter can be NULL if the data is not needed. This value must contain the size of the pvData buffer on entry.  If pvData is NULL (or if pvData is not NULL, but too small of a buffer to hold the registry data), then on exit it will contain the size required to hold the registry data. [in, out] pcbData Type: DWORD* When this function returns, contains a pointer to the size of the data, in bytes.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegGetValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreggetvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the relative path from hkey to the subkey to retrieve the value from. This parameter can be NULL or an empty string, in which case the data is retrieved from the hkey location.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that contains the name of the value. This parameter can be NULL or an empty string, in which case the data is retrieved from the Default value.",
                    "possible_constants": []
                },
                {
                    "name": "srrfFlags",
                    "type": "SRRF",
                    "description": "Type: SRRF One or more of the SRRF flags that restricts the data to be retrieved. At least one type restriction (SRRF_RT) value must be specified. [in, out] pdwType Type: LPDWORD A pointer to a DWORD that receives the type of data stored in the retrieved value. When using default values, the input pdwType is the type of the default value. For possible values, see Registry Data Types. If the SRRF_NOEXPAND flag is not set, REG_EXPAND_SZ types are automatically expanded and returned as REG_SZ. If type information is not required, this parameter can be NULL. [out] pvData Type: LPVOID A pointer to a buffer that receives the value's data. This parameter can be NULL if the data is not needed. For example, if you were testing only for a value's existence, the specific value data would be superfluous. [in, out] pcbData Type: LPDWORD A pointer to a DWORD that, on entry, contains the size of the destination data buffer pvData, in bytes. This value can be NULL only if pvData is NULL. On exit, pcbData points to one of these values.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegOpenUSKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregopenuskeya",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey.",
                    "possible_constants": []
                },
                {
                    "name": "samDesired",
                    "type": "REGSAM",
                    "description": "Type: REGSAM The desired security access. For more information on security access, see REGSAM.",
                    "possible_constants": []
                },
                {
                    "name": "hRelativeUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY The key to be used as a base for relative paths. If pszPath is a relative path, the key it specifies will be relative to hRelativeUSKey. If pszPath is an absolute path, set hRelativeUSKey to NULL. [out] phNewUSKey Type: PHUSKEY A pointer to the handle of the opened key.",
                    "possible_constants": []
                },
                {
                    "name": "phNewUSKey",
                    "type": "PHUSKEY",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL The variable that specifies which key to look under. When set to TRUE, SHRegOpenUSKey ignores HKEY_CURRENT_USER and returns a value from HKEY_LOCAL_MACHINE.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegOpenUSKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregopenuskeyw",
            "description": "",
            "parameters": [
                {
                    "name": "pwzPath",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "samDesired",
                    "type": "REGSAM",
                    "description": "Type: REGSAM The desired security access. For more information on security access, see REGSAM.",
                    "possible_constants": []
                },
                {
                    "name": "hRelativeUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY The key to be used as a base for relative paths. If pszPath is a relative path, the key it specifies will be relative to hRelativeUSKey. If pszPath is an absolute path, set hRelativeUSKey to NULL. [out] phNewUSKey Type: PHUSKEY A pointer to the handle of the opened key.",
                    "possible_constants": []
                },
                {
                    "name": "phNewUSKey",
                    "type": "PHUSKEY",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL The variable that specifies which key to look under. When set to TRUE, SHRegOpenUSKey ignores HKEY_CURRENT_USER and returns a value from HKEY_LOCAL_MACHINE.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegQueryInfoUSKeyA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregqueryinfouskeya",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function. [out, optional] pcSubKeys Type: LPDWORD A pointer to  a DWORD that receives the number of subkeys under the specified key. [out, optional] pcchMaxSubKeyLen Type: LPDWORD A pointer to a DWORD that receives the number of characters in the largest subkey name. [out, optional] pcValues Type: LPDWORD A pointer to  a DWORD that receives the number of values under the specified key. [out, optional] pcchMaxValueNameLen Type: LPDWORD A pointer to a DWORD that receives the number of characters in the largest value name.",
                    "possible_constants": []
                },
                {
                    "name": "pcSubKeys",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxSubKeyLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcValues",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxValueNameLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS One of the SHREGENUM_FLAGS that specifies the base key in which the query should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegQueryInfoUSKeyW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregqueryinfouskeyw",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function. [out, optional] pcSubKeys Type: LPDWORD A pointer to  a DWORD that receives the number of subkeys under the specified key. [out, optional] pcchMaxSubKeyLen Type: LPDWORD A pointer to a DWORD that receives the number of characters in the largest subkey name. [out, optional] pcValues Type: LPDWORD A pointer to  a DWORD that receives the number of values under the specified key. [out, optional] pcchMaxValueNameLen Type: LPDWORD A pointer to a DWORD that receives the number of characters in the largest value name.",
                    "possible_constants": []
                },
                {
                    "name": "pcSubKeys",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxSubKeyLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcValues",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pcchMaxValueNameLen",
                    "type": "LPDWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "enumRegFlags",
                    "type": "SHREGENUM_FLAGS",
                    "description": "Type: SHREGENUM_FLAGS One of the SHREGENUM_FLAGS that specifies the base key in which the query should take place.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegQueryUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregqueryusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey, or one of the following predefined values. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the null-terminated string that contains the name of the value to be queried. [in, out, optional] pdwType Type: LPDWORD* A pointer to the variable that sets or receives the key's value type. For more information, see Registry Data Types. This parameter can be NULL. [out, optional] pvData Type: LPVOID* A pointer to the buffer that receives the value's data. This parameter can be NULL if the data is not required. [in, out] pcbData Type: LPDWORD* A pointer to  the variable that specifies the size, in bytes, of the buffer pointed to by the pvData parameter. When the function returns, this variable contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL The variable that specifies which key to look under. When set to TRUE, SHRegQueryUSValue ignores HKEY_CURRENT_USER and returns the value from the key under HKEY_LOCAL_MACHINE. [in, optional] pvDefaultData Type: LPVOID* A pointer to the default data.",
                    "possible_constants": []
                },
                {
                    "name": "*pvDefaultData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwDefaultDataSize",
                    "type": "DWORD",
                    "description": "Type: DWORD The length, in bytes, of the default data.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegQueryUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregqueryusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey, or one of the following predefined values. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the null-terminated string that contains the name of the value to be queried. [in, out, optional] pdwType Type: LPDWORD* A pointer to the variable that sets or receives the key's value type. For more information, see Registry Data Types. This parameter can be NULL. [out, optional] pvData Type: LPVOID* A pointer to the buffer that receives the value's data. This parameter can be NULL if the data is not required. [in, out] pcbData Type: LPDWORD* A pointer to  the variable that specifies the size, in bytes, of the buffer pointed to by the pvData parameter. When the function returns, this variable contains the size of the data copied to pvData.",
                    "possible_constants": []
                },
                {
                    "name": "*pdwType",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcbData",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreHKCU",
                    "type": "BOOL",
                    "description": "Type: BOOL The variable that specifies which key to look under. When set to TRUE, SHRegQueryUSValue ignores HKEY_CURRENT_USER and returns the value from the key under HKEY_LOCAL_MACHINE. [in, optional] pvDefaultData Type: LPVOID* A pointer to the default data.",
                    "possible_constants": []
                },
                {
                    "name": "*pvDefaultData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwDefaultDataSize",
                    "type": "DWORD",
                    "description": "Type: DWORD The length, in bytes, of the default data.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegSetPathA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregsetpatha",
            "description": "",
            "parameters": [
                {
                    "name": "hKey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to a key that is currently open, or a registry root key.",
                    "possible_constants": []
                },
                {
                    "name": "pcszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string containing the name of an existing subkey. If the subkey does not exist, SHRegSetPath will fail.",
                    "possible_constants": []
                },
                {
                    "name": "pcszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the value to hold the path string.",
                    "possible_constants": []
                },
                {
                    "name": "pcszPath",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with a fully qualified file path.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegSetPathW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregsetpathw",
            "description": "",
            "parameters": [
                {
                    "name": "hKey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to a key that is currently open, or a registry root key.",
                    "possible_constants": []
                },
                {
                    "name": "pcszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string containing the name of an existing subkey. If the subkey does not exist, SHRegSetPath will fail.",
                    "possible_constants": []
                },
                {
                    "name": "pcszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the value to hold the path string.",
                    "possible_constants": []
                },
                {
                    "name": "pcszPath",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with a fully qualified file path.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegSetUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregsetusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string with the name of the subkey.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the name of the value.",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD Type of data to be stored. This parameter must be the REG_SZ type. For more information, see Registry Data Types. [in, optional] pvData Type: LPVOID* Apointer to a null-terminated string that contains the value to be set for the specified key.",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD Length, in bytes, of the string pointed to by the pvData parameter, not including the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Flags indicating where the data should be written. Write to HKEY_CURRENT_USER if empty. Write to HKEY_CURRENT_USER. Write to HKEY_LOCAL_MACHINE if empty. Write to HKEY_LOCAL_MACHINE. Equivalent to (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegSetUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregsetusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "pwzSubKey",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "pwzValue",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD Type of data to be stored. This parameter must be the REG_SZ type. For more information, see Registry Data Types. [in, optional] pvData Type: LPVOID* Apointer to a null-terminated string that contains the value to be set for the specified key.",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD Length, in bytes, of the string pointed to by the pvData parameter, not including the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Flags indicating where the data should be written. Write to HKEY_CURRENT_USER if empty. Write to HKEY_CURRENT_USER. Write to HKEY_LOCAL_MACHINE if empty. Write to HKEY_LOCAL_MACHINE. Equivalent to (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegSetValue",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregsetvalue",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCWSTR A pointer to a null-terminated string that specifies the relative path from hkey to the subkey from which to retrieve the value. This parameter can be NULL or an empty string, in which case the data is retrieved from the hkey location.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCWSTR A pointer to a null-terminated string that contains the name of the value. This parameter can be NULL or an empty string, in which case the data is retrieved from the Default value.",
                    "possible_constants": []
                },
                {
                    "name": "srrfFlags",
                    "type": "SRRF",
                    "description": "Type: SRRF One or more of the SRRF flags that restricts the data to be set. At least one type restriction (SRRF_RT) value must be specified.",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD The DWORD that indicates the type of data stored in the value to be set. When using default values, the input dwType is the type of the default value. For possible values, see Registry Data Types. If the SRRF_NOEXPAND flag is not set, REG_EXPAND_SZ types are automatically expanded and returned as REG_SZ. If type information is not required, this parameter can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "pvData",
                    "type": "LPCVOID",
                    "description": "Type: LPCVOID A pointer to a buffer that contains the value's data. This parameter can be NULL if the data is not needed.",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD The size of the source data buffer pvData, in bytes. This value can be NULL only if pvData is NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegWriteUSValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregwriteusvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to a null-terminated string that specifies the name of the value. This value is an entry in the subkey specified by hUSKey. If a value with this name is not already present in the subkey, it will be added. If this parameter is NULL or an empty string, the function sets the type and data for the subkey's Default value.",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of the data to be stored in the value specified by pszValue. One of the following registry value types defined in Winnt.h and Wdm.h. [in] pvData Type: const void* A pointer to the data to be set for the value specified by pszValue. For string-based types, such as REG_SZ, the string must be null-terminated. With the REG_MULTI_SZ data type, the string must be terminated with two null characters. A backslash in a path must be preceded by another backslash as an escape character. For example, specify \"C:\\mydir\\myfile\" to store the string \"C:\\mydir\\myfile\".",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD The size, in bytes, of the data pointed to by the pvData parameter. If the data is of type REG_SZ, REG_EXPAND_SZ, or REG_MULTI_SZ, cbData must include the size of the terminating null character or characters.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Flags that indicate the subtree to which the data should be written. One or more of the following values: Write to HKEY_CURRENT_USER only if a value of the name specified in pszValue does not currently exist under the specified subkey. Write to HKEY_CURRENT_USER. If a value of the name specified in pszValue already exists, it will be overwritten. Write to HKEY_LOCAL_MACHINE only if a value of the name specified in pszValue does not currently exist under the specified subkey.. Write to HKEY_LOCAL_MACHINE. If a value of the name specified in pszValue already exists, it will be overwritten. Equivalent to (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHRegWriteUSValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shregwriteusvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hUSKey",
                    "type": "HUSKEY",
                    "description": "Type: HUSKEY A handle to a currently open registry subkey. The subkey must have been opened with the KEY_SET_VALUE access right. For more information, see Registry Key Security and Access Rights. This handle can be obtained through the SHRegOpenUSKey function.",
                    "possible_constants": []
                },
                {
                    "name": "pwzValue",
                    "type": "LPCWSTR",
                    "description": " TBD",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD The type of the data to be stored in the value specified by pszValue. One of the following registry value types defined in Winnt.h and Wdm.h. [in] pvData Type: const void* A pointer to the data to be set for the value specified by pszValue. For string-based types, such as REG_SZ, the string must be null-terminated. With the REG_MULTI_SZ data type, the string must be terminated with two null characters. A backslash in a path must be preceded by another backslash as an escape character. For example, specify \"C:\\mydir\\myfile\" to store the string \"C:\\mydir\\myfile\".",
                    "possible_constants": []
                },
                {
                    "name": "*pvData",
                    "type": "const void",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD The size, in bytes, of the data pointed to by the pvData parameter. If the data is of type REG_SZ, REG_EXPAND_SZ, or REG_MULTI_SZ, cbData must include the size of the terminating null character or characters.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": "Type: DWORD Flags that indicate the subtree to which the data should be written. One or more of the following values: Write to HKEY_CURRENT_USER only if a value of the name specified in pszValue does not currently exist under the specified subkey. Write to HKEY_CURRENT_USER. If a value of the name specified in pszValue already exists, it will be overwritten. Write to HKEY_LOCAL_MACHINE only if a value of the name specified in pszValue does not currently exist under the specified subkey.. Write to HKEY_LOCAL_MACHINE. If a value of the name specified in pszValue already exists, it will be overwritten. Equivalent to (SHREGSET_FORCE_HKCU | SHREGSET_HKLM).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHReleaseThreadRef",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shreleasethreadref",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "SHSendMessageBroadcastA",
            "return_type": "LRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shsendmessagebroadcasta",
            "description": "",
            "parameters": [
                {
                    "name": "uMsg",
                    "type": "UINT",
                    "description": "Type: UINT The message to send.",
                    "possible_constants": []
                },
                {
                    "name": "wParam",
                    "type": "WPARAM",
                    "description": "Type: WPARAM Additional message-specific information.",
                    "possible_constants": []
                },
                {
                    "name": "lParam",
                    "type": "LPARAM",
                    "description": "Type: LPARAM Additional message-specific information.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHSendMessageBroadcastW",
            "return_type": "LRESULT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shsendmessagebroadcastw",
            "description": "",
            "parameters": [
                {
                    "name": "uMsg",
                    "type": "UINT",
                    "description": "Type: UINT The message to send.",
                    "possible_constants": []
                },
                {
                    "name": "wParam",
                    "type": "WPARAM",
                    "description": "Type: WPARAM Additional message-specific information.",
                    "possible_constants": []
                },
                {
                    "name": "lParam",
                    "type": "LPARAM",
                    "description": "Type: LPARAM Additional message-specific information.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHSetThreadRef",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shsetthreadref",
            "description": "",
            "parameters": [
                {
                    "name": "*punk",
                    "type": "IUnknown",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHSetValueA",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shsetvaluea",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the name of the subkey with which a value is associated. This can be NULL or a pointer to an empty string. In this case, the value is added to the key identified by the hkey parameter.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD Type of data to be stored. This parameter must be the REG_SZ type. For more information, see Registry Data Types.",
                    "possible_constants": []
                },
                {
                    "name": "pvData",
                    "type": "LPCVOID",
                    "description": "Type: LPCVOID Pointer to a buffer that contains the data to set for the specified value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD Length, in bytes, of the buffer pointed to by the pvData parameter. If the data is a null-terminated string, this length includes the terminating null character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHSetValueW",
            "return_type": "LSTATUS",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shsetvaluew",
            "description": "",
            "parameters": [
                {
                    "name": "hkey",
                    "type": "HKEY",
                    "description": "Type: HKEY A handle to the currently open key, or any of the following predefined values.",
                    "possible_constants": []
                },
                {
                    "name": "pszSubKey",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the name of the subkey with which a value is associated. This can be NULL or a pointer to an empty string. In this case, the value is added to the key identified by the hkey parameter.",
                    "possible_constants": []
                },
                {
                    "name": "pszValue",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR The address of a null-terminated string that specifies the value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "dwType",
                    "type": "DWORD",
                    "description": "Type: DWORD Type of data to be stored. This parameter must be the REG_SZ type. For more information, see Registry Data Types.",
                    "possible_constants": []
                },
                {
                    "name": "pvData",
                    "type": "LPCVOID",
                    "description": "Type: LPCVOID Pointer to a buffer that contains the data to set for the specified value. This value can be NULL.",
                    "possible_constants": []
                },
                {
                    "name": "cbData",
                    "type": "DWORD",
                    "description": "Type: DWORD Length, in bytes, of the buffer pointed to by the pvData parameter. If the data is a null-terminated string, this length includes the terminating null character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHSkipJunction",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shskipjunction",
            "description": "",
            "parameters": [
                {
                    "name": "*pbc",
                    "type": "IBindCtx",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pclsid",
                    "type": "const CLSID",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHStrDupA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shstrdupa",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the null-terminated string to be copied. [out] ppwsz Type: LPTSTR* A pointer to an allocated Unicode string that contains the result. SHStrDup allocates memory for this string with CoTaskMemAlloc. You should free the string with CoTaskMemFree when it is no longer needed. In the case of failure, this value is NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*ppwsz",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHStrDupW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shstrdupw",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the null-terminated string to be copied. [out] ppwsz Type: LPTSTR* A pointer to an allocated Unicode string that contains the result. SHStrDup allocates memory for this string with CoTaskMemAlloc. You should free the string with CoTaskMemFree when it is no longer needed. In the case of failure, this value is NULL.",
                    "possible_constants": []
                },
                {
                    "name": "*ppwsz",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHStripMneumonicA",
            "return_type": "CHAR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shstripmneumonica",
            "description": "",
            "parameters": [
                {
                    "name": "pszMenu",
                    "type": "LPSTR",
                    "description": "Type: LPTSTR* A pointer to the null-terminated string that contains the mnemonic marker.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHStripMneumonicW",
            "return_type": "WCHAR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shstripmneumonicw",
            "description": "",
            "parameters": [
                {
                    "name": "pszMenu",
                    "type": "LPWSTR",
                    "description": "Type: LPTSTR* A pointer to the null-terminated string that contains the mnemonic marker.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHUnicodeToAnsi",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shunicodetoansi",
            "description": "",
            "parameters": [
                {
                    "name": "pwszSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the null-terminated Unicode string to be converted to ANSI. [out] pszDst Type: PSTR A pointer to a buffer that, when this function returns successfully, receives the converted characters. The buffer must be large enough to contain the number of CHAR characters specified by the cchBuf parameter, including room for a terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "pszDst",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "int",
                    "description": " Type: int The number of CHAR values that can be contained by the buffer pointed to by pszDst. The value assigned to parameter must be greater than zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHUnicodeToUnicode",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shunicodetounicode",
            "description": "",
            "parameters": [
                {
                    "name": "pwzSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated Unicode string to be copied to the output buffer. [out] pwzDst Type: PWSTR A pointer to an output buffer to receive the copied characters. The buffer must be large enough to contain the number of WCHAR characters specified by cwchBuf, including room for a terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "pwzDst",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cwchBuf",
                    "type": "int",
                    "description": " Type: int The number of WCHAR characters that can be contained by the buffer pointed to by pwzDst parameter. This parameter must be greater than zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "SHUnlockShared",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-shunlockshared",
            "description": "",
            "parameters": [
                {
                    "name": "*pvData",
                    "type": "void",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StopWatchFlush",
            "return_type": "DWORD",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-stopwatchflush",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "StopWatchMode",
            "return_type": "DWORD",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-stopwatchmode",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "StrCatBuffA",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcatbuffa",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string. When this function returns successfully, this string contains its original content with the string pszSrc appended.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the string to be appended to pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "cchDestBuffSize",
                    "type": "int",
                    "description": " Type: int The size of the buffer, in characters, pointed to by pszDest. This value must be at least the length of the combined string plus the terminating null character. If the buffer is too small to fit the entire string, the string will be truncated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCatBuffW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcatbuffw",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string. When this function returns successfully, this string contains its original content with the string pszSrc appended.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the string to be appended to pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "cchDestBuffSize",
                    "type": "int",
                    "description": " Type: int The size of the buffer, in characters, pointed to by pszDest. This value must be at least the length of the combined string plus the terminating null character. If the buffer is too small to fit the entire string, the string will be truncated.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCatChainW",
            "return_type": "DWORD",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcatchainw",
            "description": "",
            "parameters": [
                {
                    "name": "pszDst",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchDst",
                    "type": "DWORD",
                    "description": " Type: DWORD The size of the destination buffer, in characters. This buffer must be of sufficient size to hold both strings as well as a terminating null character. If the buffer is too small, the final string is truncated.",
                    "possible_constants": []
                },
                {
                    "name": "ichAt",
                    "type": "DWORD",
                    "description": " Type: DWORD The offset into the destination buffer at which to begin the append action. If the string is not empty, set this value to -1 to have the current number of filled characters (not including the terminating null character) calculated for you.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the null-terminated Unicode source string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCatW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcatw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string. When this function returns successfully, this string contains its original content with the string psz2 appended. This buffer must be large enough to hold both strings and the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string to be appended to psz1.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchra",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCSTR",
                    "description": "Type: PTSTR The address of the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WORD",
                    "description": " Type: TCHAR The character to be used for comparison.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrIA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchria",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WORD",
                    "description": " Type: TCHAR The character to be used for comparison.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchriw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: TCHAR The character to be used for comparison.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrNIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchrniw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: WCHAR The character to be used for comparison.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The maximum number of characters to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrNW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchrnw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PWSTR A pointer to the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: WCHAR The character to be used for comparison.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The maximum number of characters to search.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrChrW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strchrw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR The address of the string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: TCHAR The character to be used for comparison.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpCA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpca",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpCW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpcw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpICA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpica",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpICW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpicw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpIW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpiw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpLogicalW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmplogicalw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpna",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNCA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpnca",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNCW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpncw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNIA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpnia",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNICA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpnica",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNICW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpnicw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr1",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszStr2",
                    "type": "LPCWSTR",
                    "description": "Type: LPCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNIW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpniw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpNW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpnw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": "Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCmpW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcmpw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCpyNW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcpynw",
            "description": "",
            "parameters": [
                {
                    "name": "pszDst",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pszSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated source string.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "int",
                    "description": " Type: int The number of characters to be copied, including the terminating null character.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCpyW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcpyw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated source string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCSpnA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcspna",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string that contains the characters to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCSpnIA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcspnia",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string containing the characters to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCSpnIW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcspniw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string containing the characters to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrCSpnW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strcspnw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStr",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string that contains the characters to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrDupA",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strdupa",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrch",
                    "type": "PCSTR",
                    "description": " Type: PCTSTR A pointer to a constant null-terminated character string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrDupW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strdupw",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": " Type: PCTSTR A pointer to a constant null-terminated character string.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatByteSize64A",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatbytesize64a",
            "description": "",
            "parameters": [
                {
                    "name": "qdw",
                    "type": "LONGLONG",
                    "description": " Type: LONGLONG The numeric value to be converted. [out] pszBuf Type: PSTR A pointer to a buffer that, when this function returns successfully, receives the converted number.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of the buffer pointed to by pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatByteSizeA",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatbytesizea",
            "description": "",
            "parameters": [
                {
                    "name": "dw",
                    "type": "DWORD",
                    "description": " Type: DWORD The numeric value to be converted. [out] pszBuf Type: PSTR A pointer to a buffer that receives the converted string.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of the buffer pointed to by pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatByteSizeEx",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatbytesizeex",
            "description": "",
            "parameters": [
                {
                    "name": "ull",
                    "type": "ULONGLONG",
                    "description": " Type: ULONGLONG The numeric value to be converted.",
                    "possible_constants": []
                },
                {
                    "name": "flags",
                    "type": "SFBS_FLAGS",
                    "description": " Type: SFBS_FLAGS One of the SFBS_FLAGS enumeration values that specifies whether to round or truncate undisplayed digits. This value cannot be NULL. [out] pszBuf Type: PWSTR A pointer to a buffer that receives the converted string.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of the buffer pointed to by pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatByteSizeW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatbytesizew",
            "description": "",
            "parameters": [
                {
                    "name": "qdw",
                    "type": "LONGLONG",
                    "description": " Type: LONGLONG The numeric value to be converted. [out] pszBuf Type: PWSTR A pointer to a buffer that, when this function returns successfully, receives the converted number.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of the buffer pointed to by pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatKBSizeA",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatkbsizea",
            "description": "",
            "parameters": [
                {
                    "name": "qdw",
                    "type": "LONGLONG",
                    "description": " Type: LONGLONG The numeric value to be converted. [out] pszBuf Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the converted number.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFormatKBSizeW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strformatkbsizew",
            "description": "",
            "parameters": [
                {
                    "name": "qdw",
                    "type": "LONGLONG",
                    "description": " Type: LONGLONG The numeric value to be converted. [out] pszBuf Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the converted number.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": " Type: UINT The size of pszBuf, in characters.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFromTimeIntervalA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strfromtimeintervala",
            "description": "",
            "parameters": [
                {
                    "name": "pszOut",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The size of pszOut, in characters. If cchMax is set to zero, StrFromTimeInterval will return the minimum size of the character buffer needed to hold the converted string. In this case, pszOut will not contain the converted string.",
                    "possible_constants": []
                },
                {
                    "name": "dwTimeMS",
                    "type": "DWORD",
                    "description": " Type: DWORD The time interval, in milliseconds.",
                    "possible_constants": []
                },
                {
                    "name": "digits",
                    "type": "int",
                    "description": " Type: int The maximum number of significant digits to be represented in pszOut. Some examples are:",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrFromTimeIntervalW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strfromtimeintervalw",
            "description": "",
            "parameters": [
                {
                    "name": "pszOut",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The size of pszOut, in characters. If cchMax is set to zero, StrFromTimeInterval will return the minimum size of the character buffer needed to hold the converted string. In this case, pszOut will not contain the converted string.",
                    "possible_constants": []
                },
                {
                    "name": "dwTimeMS",
                    "type": "DWORD",
                    "description": " Type: DWORD The time interval, in milliseconds.",
                    "possible_constants": []
                },
                {
                    "name": "digits",
                    "type": "int",
                    "description": " Type: int The maximum number of significant digits to be represented in pszOut. Some examples are:",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrIsIntlEqualA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strisintlequala",
            "description": "",
            "parameters": [
                {
                    "name": "fCaseSens",
                    "type": "BOOL",
                    "description": " Type: BOOL The case sensitivity of the comparison. If this value is nonzero, the comparison is case-sensitive. If this value is zero, the comparison is not case-sensitive.",
                    "possible_constants": []
                },
                {
                    "name": "pszString1",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszString2",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrIsIntlEqualW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strisintlequalw",
            "description": "",
            "parameters": [
                {
                    "name": "fCaseSens",
                    "type": "BOOL",
                    "description": " Type: BOOL The case sensitivity of the comparison. If this value is nonzero, the comparison is case-sensitive. If this value is zero, the comparison is not case-sensitive.",
                    "possible_constants": []
                },
                {
                    "name": "pszString1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the first null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "pszString2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the second null-terminated string to be compared.",
                    "possible_constants": []
                },
                {
                    "name": "nChar",
                    "type": "int",
                    "description": " Type: int The number of characters from the beginning of each string to be compared.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrNCatA",
            "return_type": "PSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strncata",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string to which the function appends the characters from psz2. It must be large enough to hold the combined strings plus the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCSTR",
                    "description": " Type: PCTSTR A pointer to the null-terminated string to be appended.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "int",
                    "description": " Type: int The number of characters to be appended to psz1 from the beginning of psz2.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrNCatW",
            "return_type": "PWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strncatw",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string to which the function appends the characters from psz2. It must be large enough to hold the combined strings plus the terminating null character.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": " Type: PCTSTR A pointer to the null-terminated string to be appended.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "int",
                    "description": " Type: int The number of characters to be appended to psz1 from the beginning of psz2.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrPBrkA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strpbrka",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated character buffer that contains the characters for which to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrPBrkW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strpbrkw",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated character buffer that contains the characters for which to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRChrA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrchra",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszEnd",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszEnd to point to a character in the string and the search will stop with the preceding character. Set pszEnd to NULL to search the entire string.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WORD",
                    "description": " Type: TCHAR The character to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRChrIA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrchria",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszEnd",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszEnd to point to a character in the string and the search will stop with the preceding character. Set pszEnd to NULL to search the entire string.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WORD",
                    "description": " Type: TCHAR The character to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRChrIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrchriw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszEnd",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszEnd to point to a character in the string and the search will stop with the preceding character. Set pszEnd to NULL to search the entire string.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: TCHAR The character to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRChrW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrchrw",
            "description": "",
            "parameters": [
                {
                    "name": "pszStart",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to be searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszEnd",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszEnd to point to a character in the string and the search will stop with the preceding character. Set pszEnd to NULL to search the entire string.",
                    "possible_constants": []
                },
                {
                    "name": "wMatch",
                    "type": "WCHAR",
                    "description": " Type: TCHAR The character to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRetToBSTR",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrettobstr",
            "description": "",
            "parameters": [
                {
                    "name": "*pstr",
                    "type": "STRRET",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidl",
                    "type": "PCUITEMID_CHILD",
                    "description": "Type: PCUITEMID_CHILD A pointer to an ITEMIDLIST that uniquely identifies a file object or subfolder relative to the parent folder. This value can be NULL. [out] pbstr Type: BSTR* A pointer to a variable of type BSTR that receives the converted string.",
                    "possible_constants": []
                },
                {
                    "name": "*pbstr",
                    "type": "BSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRetToBufA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrettobufa",
            "description": "",
            "parameters": [
                {
                    "name": "*pstr",
                    "type": "STRRET",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidl",
                    "type": "PCUITEMID_CHILD",
                    "description": "Type: PCUITEMID_CHILD A pointer to the item's ITEMIDLIST structure. [out] pszBuf Type: LPTSTR A buffer to hold the display name. It will be returned as a null-terminated string. If cchBuf is too small, the name will be truncated to fit.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRetToBufW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrettobufw",
            "description": "",
            "parameters": [
                {
                    "name": "*pstr",
                    "type": "STRRET",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidl",
                    "type": "PCUITEMID_CHILD",
                    "description": "Type: PCUITEMID_CHILD A pointer to the item's ITEMIDLIST structure. [out] pszBuf Type: LPTSTR A buffer to hold the display name. It will be returned as a null-terminated string. If cchBuf is too small, the name will be truncated to fit.",
                    "possible_constants": []
                },
                {
                    "name": "pszBuf",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchBuf",
                    "type": "UINT",
                    "description": "Type: UINT The size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRetToStrA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrettostra",
            "description": "",
            "parameters": [
                {
                    "name": "*pstr",
                    "type": "STRRET",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidl",
                    "type": "PCUITEMID_CHILD",
                    "description": "Type: PCUITEMID_CHILD A pointer to the item's ITEMIDLIST structure. This value can be NULL. [out] ppsz Type: LPTSTR* A pointer to an allocated string containing the result. StrRetToStr allocates memory for this string with CoTaskMemAlloc. You should free the string with CoTaskMemFree when it is no longer needed.",
                    "possible_constants": []
                },
                {
                    "name": "*ppsz",
                    "type": "LPSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRetToStrW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrettostrw",
            "description": "",
            "parameters": [
                {
                    "name": "*pstr",
                    "type": "STRRET",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "pidl",
                    "type": "PCUITEMID_CHILD",
                    "description": "Type: PCUITEMID_CHILD A pointer to the item's ITEMIDLIST structure. This value can be NULL. [out] ppsz Type: LPTSTR* A pointer to an allocated string containing the result. StrRetToStr allocates memory for this string with CoTaskMemAlloc. You should free the string with CoTaskMemFree when it is no longer needed.",
                    "possible_constants": []
                },
                {
                    "name": "*ppsz",
                    "type": "LPWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRStrIA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrstria",
            "description": "",
            "parameters": [
                {
                    "name": "pszSource",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated source string.",
                    "possible_constants": []
                },
                {
                    "name": "pszLast",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszLast to point to a character in the source string, and the search will stop with the preceding character. Set pszLast to NULL to search the entire source string.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrRStrIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strrstriw",
            "description": "",
            "parameters": [
                {
                    "name": "pszSource",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated source string.",
                    "possible_constants": []
                },
                {
                    "name": "pszLast",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer into the source string that defines the range of the search. Set pszLast to point to a character in the source string, and the search will stop with the preceding character. Set pszLast to NULL to search the entire source string.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrSpnA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strspna",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated character buffer that contains the set of characters for which to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrSpnW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strspnw",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated character buffer that contains the set of characters for which to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSet",
                    "type": "PCWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstra",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrIA",
            "return_type": "PCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstria",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string being searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstriw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string being searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrNIW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstrniw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCWSTR",
                    "description": "Type: PWSTR A pointer to the null-terminated, Unicode string that is being searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the null-terminated, Unicode substring that is being searched for.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The maximum number of characters from the beginning of the searched string in which to search for the substring.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrNW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstrnw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCWSTR",
                    "description": "Type: PWSTR A pointer to the null-terminated, Unicode string that is being searched.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to the null-terminated, Unicode substring that is being searched for.",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "UINT",
                    "description": " Type: UINT The maximum number of characters from the beginning of the searched string in which to search for the substring.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrStrW",
            "return_type": "PCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strstrw",
            "description": "",
            "parameters": [
                {
                    "name": "pszFirst",
                    "type": "PCWSTR",
                    "description": "Type: PTSTR A pointer to the null-terminated string to search.",
                    "possible_constants": []
                },
                {
                    "name": "pszSrch",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the substring to search for.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToInt64ExA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtoint64exa",
            "description": "",
            "parameters": [
                {
                    "name": "pszString",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. For further details concerning the valid forms of the string, see the Remarks section.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "STIF_FLAGS",
                    "description": " Type: STIF_FLAGS One of the following values that specify how pszString should be parsed for its conversion to a 64-bit integer. The string at pszString contains the representation of a decimal value. The string at pszString contains the representation of either a decimal or hexadecimal value. Note that in hexadecimal representations, the characters A-F are case-insensitive. [out] pllRet Type: LONGLONG* A pointer to a variable of type LONGLONG that receives the 64-bit integer value of the converted string. For instance, in the case of the string \"123\", the integer pointed to by this value receives the value 123. If this function returns FALSE, this value is undefined. If the value returned is too large to be contained in a variable of type LONGLONG, this parameter contains the 64 low-order bits of the value. Any high-order bits beyond that are lost.",
                    "possible_constants": []
                },
                {
                    "name": "*pllRet",
                    "type": "LONGLONG",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToInt64ExW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtoint64exw",
            "description": "",
            "parameters": [
                {
                    "name": "pszString",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. For further details concerning the valid forms of the string, see the Remarks section.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "STIF_FLAGS",
                    "description": " Type: STIF_FLAGS One of the following values that specify how pszString should be parsed for its conversion to a 64-bit integer. The string at pszString contains the representation of a decimal value. The string at pszString contains the representation of either a decimal or hexadecimal value. Note that in hexadecimal representations, the characters A-F are case-insensitive. [out] pllRet Type: LONGLONG* A pointer to a variable of type LONGLONG that receives the 64-bit integer value of the converted string. For instance, in the case of the string \"123\", the integer pointed to by this value receives the value 123. If this function returns FALSE, this value is undefined. If the value returned is too large to be contained in a variable of type LONGLONG, this parameter contains the 64 low-order bits of the value. Any high-order bits beyond that are lost.",
                    "possible_constants": []
                },
                {
                    "name": "*pllRet",
                    "type": "LONGLONG",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToIntA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtointa",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrc",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. A valid string representing a decimal value contains only the characters 0-9 and must have the following form to be parsed successfully. The optional sign can be the character '-' or '+'; if omitted, the sign is assumed to be positive.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToIntExA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtointexa",
            "description": "",
            "parameters": [
                {
                    "name": "pszString",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. For further details concerning the valid forms of the string, see the Remarks section.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "STIF_FLAGS",
                    "description": " Type: STIF_FLAGS One of the following values that specify how pszString should be parsed for its conversion to an integer. The string at pszString contains the representation of a decimal value. The string at pszString contains the representation of either a decimal or hexadecimal value. Note that in hexadecimal representations, the characters A-F are case-insensitive. [out] piRet Type: int* A pointer to an int that receives the converted string. For instance, in the case of the string \"123\", the integer pointed to by this value receives the integer value 123. If this function returns FALSE, this value is undefined. If the value returned is too large to be contained in a variable of type int, this parameter contains the 32 low-order bits of the value. Any high-order bits beyond that are lost.",
                    "possible_constants": []
                },
                {
                    "name": "*piRet",
                    "type": "int",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToIntExW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtointexw",
            "description": "",
            "parameters": [
                {
                    "name": "pszString",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. For further details concerning the valid forms of the string, see the Remarks section.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "STIF_FLAGS",
                    "description": " Type: STIF_FLAGS One of the following values that specify how pszString should be parsed for its conversion to an integer. The string at pszString contains the representation of a decimal value. The string at pszString contains the representation of either a decimal or hexadecimal value. Note that in hexadecimal representations, the characters A-F are case-insensitive. [out] piRet Type: int* A pointer to an int that receives the converted string. For instance, in the case of the string \"123\", the integer pointed to by this value receives the integer value 123. If this function returns FALSE, this value is undefined. If the value returned is too large to be contained in a variable of type int, this parameter contains the 32 low-order bits of the value. Any high-order bits beyond that are lost.",
                    "possible_constants": []
                },
                {
                    "name": "*piRet",
                    "type": "int",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrToIntW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtointw",
            "description": "",
            "parameters": [
                {
                    "name": "pszSrc",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to the null-terminated string to be converted. A valid string representing a decimal value contains only the characters 0-9 and must have the following form to be parsed successfully. The optional sign can be the character '-' or '+'; if omitted, the sign is assumed to be positive.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrTrimA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtrima",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string that contains the characters to trim from psz.",
                    "possible_constants": []
                },
                {
                    "name": "pszTrimChars",
                    "type": "PCSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "StrTrimW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-strtrimw",
            "description": "",
            "parameters": [
                {
                    "name": "psz",
                    "type": "PWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string that contains the characters to trim from psz.",
                    "possible_constants": []
                },
                {
                    "name": "pszTrimChars",
                    "type": "PCWSTR",
                    "description": "",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlApplySchemeA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlapplyschemea",
            "description": "",
            "parameters": [
                {
                    "name": "pszIn",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a URL. [out] pszOut Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string set to the URL specified by pszIn and converted to the standard scheme://URL_string format. [in, out] pcchOut Type: DWORD* The address of a value set to the number of characters in the pszOut buffer. When the function returns, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify how to determine the scheme. The following flags can be combined. Apply the default scheme if UrlApplyScheme can't determine one. The default prefix is stored in the registry but is typically \"http\". Attempt to determine the scheme by examining pszIn. Attempt to determine a file URL from pszIn. Force UrlApplyScheme to determine a scheme for pszIn.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlApplySchemeW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlapplyschemew",
            "description": "",
            "parameters": [
                {
                    "name": "pszIn",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a URL. [out] pszOut Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string set to the URL specified by pszIn and converted to the standard scheme://URL_string format. [in, out] pcchOut Type: DWORD* The address of a value set to the number of characters in the pszOut buffer. When the function returns, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify how to determine the scheme. The following flags can be combined. Apply the default scheme if UrlApplyScheme can't determine one. The default prefix is stored in the registry but is typically \"http\". Attempt to determine the scheme by examining pszIn. Attempt to determine a file URL from pszIn. Force UrlApplyScheme to determine a scheme for pszIn.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCanonicalizeA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcanonicalizea",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a URL string. If the string does not refer to a file, it must include a valid scheme such as \"http://\". [out] pszCanonicalized Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the converted URL as a null-terminated string. [in, out] pcchCanonicalized Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszCanonicalized buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszCanonicalized",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchCanonicalized",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify how the URL is converted to canonical form. The following flags can be combined. Un-escape any escape sequences that the URLs contain, with two exceptions. The escape sequences for \"?\" and \"#\" are not un-escaped. If one of the URL_ESCAPE_XXX flags is also set, the two URLs are first un-escaped, then combined, then escaped. Replace unsafe characters with their escape sequences. Unsafe characters are those characters that may be altered during transport across the Internet, and include the (<, >, \", #, {, }, |, , ^, [, ], and ') characters. This flag applies to all URLs, including opaque URLs. Combine URLs with client-defined pluggable protocols, according to the W3C specification. This flag does not apply to standard protocols such as ftp, http, gopher, and so on. If this flag is set, UrlCombine does not simplify URLs, so there is no need to also set URL_DONT_SIMPLIFY. Replace only spaces with escape sequences. This flag takes precedence over URL_ESCAPE_UNSAFE, but does not apply to opaque URLs. Treat \"/./\" and \"/../\" in a URL string as literal characters, not as shorthand for navigation. See Remarks for further discussion. Defined to be the same as URL_DONT_SIMPLIFY. Convert any occurrence of \"%\" to its escape sequence. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCanonicalizeW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcanonicalizew",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a URL string. If the string does not refer to a file, it must include a valid scheme such as \"http://\". [out] pszCanonicalized Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the converted URL as a null-terminated string. [in, out] pcchCanonicalized Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszCanonicalized buffer.",
                    "possible_constants": []
                },
                {
                    "name": "pszCanonicalized",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchCanonicalized",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify how the URL is converted to canonical form. The following flags can be combined. Un-escape any escape sequences that the URLs contain, with two exceptions. The escape sequences for \"?\" and \"#\" are not un-escaped. If one of the URL_ESCAPE_XXX flags is also set, the two URLs are first un-escaped, then combined, then escaped. Replace unsafe characters with their escape sequences. Unsafe characters are those characters that may be altered during transport across the Internet, and include the (<, >, \", #, {, }, |, , ^, [, ], and ') characters. This flag applies to all URLs, including opaque URLs. Combine URLs with client-defined pluggable protocols, according to the W3C specification. This flag does not apply to standard protocols such as ftp, http, gopher, and so on. If this flag is set, UrlCombine does not simplify URLs, so there is no need to also set URL_DONT_SIMPLIFY. Replace only spaces with escape sequences. This flag takes precedence over URL_ESCAPE_UNSAFE, but does not apply to opaque URLs. Treat \"/./\" and \"/../\" in a URL string as literal characters, not as shorthand for navigation. See Remarks for further discussion. Defined to be the same as URL_DONT_SIMPLIFY. Convert any occurrence of \"%\" to its escape sequence. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCombineA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcombinea",
            "description": "",
            "parameters": [
                {
                    "name": "pszBase",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the base URL.",
                    "possible_constants": []
                },
                {
                    "name": "pszRelative",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the relative URL. [out, optional] pszCombined Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string that contains the combined URL. [in, out] pcchCombined Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszCombined buffer. When the function returns successfully, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszCombined",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchCombined",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Flags that specify how the URL is converted to canonical form. The following flags can be combined. Treat '/./' and '/../' in a URL string as literal characters, not as shorthand for navigation. See Remarks for further discussion. Convert any occurrence of '%' to its escape sequence. Replace only spaces with escape sequences. This flag takes precedence over URL_ESCAPE_UNSAFE, but does not apply to opaque URLs. Replace unsafe characters with their escape sequences. Unsafe characters are those characters that may be altered during transport across the Internet, and include the (<, >, \", #, {, }, |, , ^, ~, [, ], and ') characters. This flag applies to all URLs, including opaque URLs. Defined to be the same as URL_DONT_SIMPLIFY. Combine URLs with client-defined pluggable protocols, according to the W3C specification. This flag does not apply to standard protocols such as ftp, http, gopher, and so on. If this flag is set, UrlCombine does not simplify URLs, so there is no need to also set URL_DONT_SIMPLIFY. Un-escape any escape sequences that the URLs contain, with two exceptions. The escape sequences for '?' and '#' are not un-escaped. If one of the URL_ESCAPE_XXX flags is also set, the two URLs are first un-escaped, then combined, then escaped. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCombineW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcombinew",
            "description": "",
            "parameters": [
                {
                    "name": "pszBase",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the base URL.",
                    "possible_constants": []
                },
                {
                    "name": "pszRelative",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A pointer to a null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the relative URL. [out, optional] pszCombined Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string that contains the combined URL. [in, out] pcchCombined Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszCombined buffer. When the function returns successfully, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszCombined",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchCombined",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Flags that specify how the URL is converted to canonical form. The following flags can be combined. Treat '/./' and '/../' in a URL string as literal characters, not as shorthand for navigation. See Remarks for further discussion. Convert any occurrence of '%' to its escape sequence. Replace only spaces with escape sequences. This flag takes precedence over URL_ESCAPE_UNSAFE, but does not apply to opaque URLs. Replace unsafe characters with their escape sequences. Unsafe characters are those characters that may be altered during transport across the Internet, and include the (<, >, \", #, {, }, |, , ^, ~, [, ], and ') characters. This flag applies to all URLs, including opaque URLs. Defined to be the same as URL_DONT_SIMPLIFY. Combine URLs with client-defined pluggable protocols, according to the W3C specification. This flag does not apply to standard protocols such as ftp, http, gopher, and so on. If this flag is set, UrlCombine does not simplify URLs, so there is no need to also set URL_DONT_SIMPLIFY. Un-escape any escape sequences that the URLs contain, with two exceptions. The escape sequences for '?' and '#' are not un-escaped. If one of the URL_ESCAPE_XXX flags is also set, the two URLs are first un-escaped, then combined, then escaped. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCompareA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcomparea",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the first URL.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the second URL.",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreSlash",
                    "type": "BOOL",
                    "description": " Type: BOOL A value that is set to TRUE to have UrlCompare ignore a trailing '/' character on either or both URLs.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCompareW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcomparew",
            "description": "",
            "parameters": [
                {
                    "name": "psz1",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the first URL.",
                    "possible_constants": []
                },
                {
                    "name": "psz2",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the second URL.",
                    "possible_constants": []
                },
                {
                    "name": "fIgnoreSlash",
                    "type": "BOOL",
                    "description": " Type: BOOL A value that is set to TRUE to have UrlCompare ignore a trailing '/' character on either or both URLs.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCreateFromPathA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcreatefrompatha",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the MS-DOS path. [out] pszUrl Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the URL. [in, out] pcchUrl Type: DWORD* The number of characters in pszUrl.",
                    "possible_constants": []
                },
                {
                    "name": "pszUrl",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchUrl",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Set this parameter to NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlCreateFromPathW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlcreatefrompathw",
            "description": "",
            "parameters": [
                {
                    "name": "pszPath",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the MS-DOS path. [out] pszUrl Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives the URL. [in, out] pcchUrl Type: DWORD* The number of characters in pszUrl.",
                    "possible_constants": []
                },
                {
                    "name": "pszUrl",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchUrl",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Reserved. Set this parameter to NULL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlEscapeA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlescapea",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a full or partial URL, as appropriate for the value in dwFlags. [out] pszEscaped Type: PTSTR The buffer that receives the converted string, with the unsafe characters converted to their escape sequences. [in, out] pcchEscaped Type: DWORD* A pointer to a DWORD value that, on entry, contains the number of characters in the pszEscaped buffer. Before calling UrlEscape, the calling application must set the value referenced by pcchEscaped to the size of the buffer. When this function returns successfully, the value receives the number of characters written to the buffer, not including the terminating NULL character. If an E_POINTER error code is returned, the buffer was too small to hold the result, and the value referenced by pcchEscaped is set to the required number of characters in the buffer. If any other errors are returned, the value referenced by pcchEscaped is undefined.",
                    "possible_constants": []
                },
                {
                    "name": "pszEscaped",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchEscaped",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that indicate which portion of the URL is being provided in pszURL and which characters in that string should be converted to their escape sequences. The following flags are defined. Used only in conjunction with URL_ESCAPE_SPACES_ONLY to prevent the conversion of characters in the query (the portion of the URL following the first # or ? character encountered in the string). This flag should not be used alone, nor combined with URL_ESCAPE_SEGMENT_ONLY. Defined to be the same as URL_DONT_ESCAPE_EXTRA_INFO. Convert only space characters to their escape sequences, including those space characters in the query portion of the URL. Other unsafe characters are not converted to their escape sequences. This flag assumes that pszURL does not contain a full URL. It expects only the portions following the server specification. Combine this flag with URL_DONT_ESCAPE_EXTRA_INFO to prevent the conversion of space characters in the query portion of the URL. This flag cannot be combined with URL_ESCAPE_PERCENT or URL_ESCAPE_SEGMENT_ONLY. Convert any % character found in the segment section of the URL (that section falling between the server specification and the first # or ? character). By default, the % character is not converted to its escape sequence. Other unsafe characters in the segment are also converted normally. Combining this flag with URL_ESCAPE_SEGMENT_ONLY includes those % characters in the query portion of the URL. However, as the URL_ESCAPE_SEGMENT_ONLY flag causes the entire string to be considered the segment, any # or ? characters are also converted. This flag cannot be combined with URL_ESCAPE_SPACES_ONLY. Indicates that pszURL contains only that section of the URL following the server component but preceding the query. All unsafe characters in the string are converted. If a full URL is provided when this flag is set, all unsafe characters in the entire string are converted, including # and ? characters. Combine this flag with URL_ESCAPE_PERCENT to include that character in the conversion. This flag cannot be combined with URL_ESCAPE_SPACES_ONLY or URL_DONT_ESCAPE_EXTRA_INFO. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents. Windows\u00a08 and later. Percent-encode all ASCII characters outside of the unreserved set from URI RFC 3986 (a-zA-Z0-9-.~_).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlEscapeSpaces",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlescapespaces",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "UrlEscapeW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlescapew",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains a full or partial URL, as appropriate for the value in dwFlags. [out] pszEscaped Type: PTSTR The buffer that receives the converted string, with the unsafe characters converted to their escape sequences. [in, out] pcchEscaped Type: DWORD* A pointer to a DWORD value that, on entry, contains the number of characters in the pszEscaped buffer. Before calling UrlEscape, the calling application must set the value referenced by pcchEscaped to the size of the buffer. When this function returns successfully, the value receives the number of characters written to the buffer, not including the terminating NULL character. If an E_POINTER error code is returned, the buffer was too small to hold the result, and the value referenced by pcchEscaped is set to the required number of characters in the buffer. If any other errors are returned, the value referenced by pcchEscaped is undefined.",
                    "possible_constants": []
                },
                {
                    "name": "pszEscaped",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchEscaped",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that indicate which portion of the URL is being provided in pszURL and which characters in that string should be converted to their escape sequences. The following flags are defined. Used only in conjunction with URL_ESCAPE_SPACES_ONLY to prevent the conversion of characters in the query (the portion of the URL following the first # or ? character encountered in the string). This flag should not be used alone, nor combined with URL_ESCAPE_SEGMENT_ONLY. Defined to be the same as URL_DONT_ESCAPE_EXTRA_INFO. Convert only space characters to their escape sequences, including those space characters in the query portion of the URL. Other unsafe characters are not converted to their escape sequences. This flag assumes that pszURL does not contain a full URL. It expects only the portions following the server specification. Combine this flag with URL_DONT_ESCAPE_EXTRA_INFO to prevent the conversion of space characters in the query portion of the URL. This flag cannot be combined with URL_ESCAPE_PERCENT or URL_ESCAPE_SEGMENT_ONLY. Convert any % character found in the segment section of the URL (that section falling between the server specification and the first # or ? character). By default, the % character is not converted to its escape sequence. Other unsafe characters in the segment are also converted normally. Combining this flag with URL_ESCAPE_SEGMENT_ONLY includes those % characters in the query portion of the URL. However, as the URL_ESCAPE_SEGMENT_ONLY flag causes the entire string to be considered the segment, any # or ? characters are also converted. This flag cannot be combined with URL_ESCAPE_SPACES_ONLY. Indicates that pszURL contains only that section of the URL following the server component but preceding the query. All unsafe characters in the string are converted. If a full URL is provided when this flag is set, all unsafe characters in the entire string are converted, including # and ? characters. Combine this flag with URL_ESCAPE_PERCENT to include that character in the conversion. This flag cannot be combined with URL_ESCAPE_SPACES_ONLY or URL_DONT_ESCAPE_EXTRA_INFO. Windows\u00a07 and later. Percent-encode all non-ASCII characters as their UTF-8 equivalents. Windows\u00a08 and later. Percent-encode all ASCII characters outside of the unreserved set from URI RFC 3986 (a-zA-Z0-9-.~_).",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlFixupW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlfixupw",
            "description": "",
            "parameters": [
                {
                    "name": "pcszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCWSTR A pointer to a null-terminated string that contains the URL to be corrected. This string must not exceed INTERNET_MAX_PATH_LENGTH characters in length, including the terminating NULL character. [out] pszTranslatedUrl Type: PWSTR A pointer to a buffer that, when this function returns successfully, receives the copied characters. The buffer must be large enough to contain the number of WCHAR characters specified by the cchMax parameter, including the terminating NULL character. This parameter can be equal to the pcszUrl parameter to correct a URL in place. If pszTranslatedUrl is not equal to pcszUrl, the buffer pointed to by pszTranslatedUrl must not overlap the buffer pointed to by pcszUrl.",
                    "possible_constants": []
                },
                {
                    "name": "pszTranslatedUrl",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchMax",
                    "type": "DWORD",
                    "description": " Type: DWORD The number of WCHAR characters that can be contained in the buffer pointed to by pszTranslatedUrl. This parameter must be greater than zero.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlGetLocationA",
            "return_type": "LPCSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlgetlocationa",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the location.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlGetLocationW",
            "return_type": "LPCWSTR",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlgetlocationw",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the location.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlGetPartA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlgetparta",
            "description": "",
            "parameters": [
                {
                    "name": "pszIn",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pszOut Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string with the specified part of the URL. [in, out] pcchOut Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszOut buffer. When this function returns successfully, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwPart",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify which part of the URL to retrieve. It can have one of the following values. The host name. The password. The port number. The query portion of the URL. The URL scheme. The username.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD A flag that can be set to keep the URL scheme, in addition to the part that is specified by dwPart. Keep the URL scheme.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlGetPartW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlgetpartw",
            "description": "",
            "parameters": [
                {
                    "name": "pszIn",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pszOut Type: PTSTR A pointer to a buffer that, when this function returns successfully, receives a null-terminated string with the specified part of the URL. [in, out] pcchOut Type: DWORD* A pointer to a value that, on entry, is set to the number of characters in the pszOut buffer. When this function returns successfully, the value depends on whether the function is successful or returns E_POINTER. For other return values, the value of this parameter is meaningless.",
                    "possible_constants": []
                },
                {
                    "name": "pszOut",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchOut",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwPart",
                    "type": "DWORD",
                    "description": " Type: DWORD The flags that specify which part of the URL to retrieve. It can have one of the following values. The host name. The password. The port number. The query portion of the URL. The URL scheme. The username.",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD A flag that can be set to keep the URL scheme, in addition to the part that is specified by dwPart. Keep the URL scheme.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlHashA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlhasha",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pbHash Type: BYTE* A pointer to a buffer that, when this function returns successfully, receives the hashed array.",
                    "possible_constants": []
                },
                {
                    "name": "*pbHash",
                    "type": "BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbHash",
                    "type": "DWORD",
                    "description": " Type: DWORD The number of elements in the array at pbHash. It should be no larger than 256.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlHashW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlhashw",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL. [out] pbHash Type: BYTE* A pointer to a buffer that, when this function returns successfully, receives the hashed array.",
                    "possible_constants": []
                },
                {
                    "name": "*pbHash",
                    "type": "BYTE",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cbHash",
                    "type": "DWORD",
                    "description": " Type: DWORD The number of elements in the array at pbHash. It should be no larger than 256.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisa",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                },
                {
                    "name": "UrlIs",
                    "type": "URLIS",
                    "description": " Type: URLIS The type of URL to be tested for. This parameter can take one of the following values. Attempt to determine a valid scheme for the URL. Does the URL string end with a directory? Is the URL a file URL? Does the URL have an appended query string? Is the URL a URL that is not typically tracked in navigation history? Is the URL opaque? Is the URL valid?",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsFileUrlA",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisfileurla",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "UrlIsFileUrlW",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisfileurlw",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "UrlIsNoHistoryA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisnohistorya",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsNoHistoryW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisnohistoryw",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsOpaqueA",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisopaquea",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsOpaqueW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisopaquew",
            "description": "",
            "parameters": [
                {
                    "name": "pszURL",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlIsW",
            "return_type": "BOOL",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlisw",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A null-terminated string of maximum length INTERNET_MAX_URL_LENGTH that contains the URL.",
                    "possible_constants": []
                },
                {
                    "name": "UrlIs",
                    "type": "URLIS",
                    "description": " Type: URLIS The type of URL to be tested for. This parameter can take one of the following values. Attempt to determine a valid scheme for the URL. Does the URL string end with a directory? Is the URL a file URL? Does the URL have an appended query string? Is the URL a URL that is not typically tracked in navigation history? Is the URL opaque? Is the URL valid?",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlUnescapeA",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlunescapea",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string with the URL. If dwFlags is set to URL_UNESCAPE_INPLACE, the converted string is returned through this parameter. [out, optional] pszUnescaped Type: PTSTR A pointer to a buffer that will receive a null-terminated string that contains the unescaped version of pszURL. If URL_UNESCAPE_INPLACE is set in dwFlags, this parameter is ignored. [in, out, optional] pcchUnescaped Type: DWORD* The number of characters in the buffer pointed to by pszUnescaped. On entry, the value pcchUnescaped points to is set to the size of the buffer. If the function returns a success code and the URL_UNESCAPE_INPLACE flag is not set, the value that pcchUnescaped points to is set to the number of characters written to that buffer, not counting the terminating NULL character. If an E_POINTER error code is returned, the buffer was too small, and the value to which pcchUnescaped points is set to the required number of characters that the buffer must be able to contain. If any other errors are returned, the value to which pcchUnescaped points is undefined.",
                    "possible_constants": []
                },
                {
                    "name": "pszUnescaped",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchUnescaped",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Flags that control which characters are unescaped. It can be a combination of the following flags. Do not convert the # or ? character, or any characters following them in the string. Introduced in Windows\u00a08. Decode URLs that were encoded by using the URL_ESCAPE_AS_UTF8 flag. Use pszURL to return the converted string instead of pszUnescaped.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "UrlUnescapeInPlace",
            "return_type": "void",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlunescapeinplace",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "UrlUnescapeW",
            "return_type": "LWSTDAPI",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-urlunescapew",
            "description": "",
            "parameters": [
                {
                    "name": "pszUrl",
                    "type": "PWSTR",
                    "description": "Type: PTSTR A pointer to a null-terminated string with the URL. If dwFlags is set to URL_UNESCAPE_INPLACE, the converted string is returned through this parameter. [out, optional] pszUnescaped Type: PTSTR A pointer to a buffer that will receive a null-terminated string that contains the unescaped version of pszURL. If URL_UNESCAPE_INPLACE is set in dwFlags, this parameter is ignored. [in, out, optional] pcchUnescaped Type: DWORD* The number of characters in the buffer pointed to by pszUnescaped. On entry, the value pcchUnescaped points to is set to the size of the buffer. If the function returns a success code and the URL_UNESCAPE_INPLACE flag is not set, the value that pcchUnescaped points to is set to the number of characters written to that buffer, not counting the terminating NULL character. If an E_POINTER error code is returned, the buffer was too small, and the value to which pcchUnescaped points is set to the required number of characters that the buffer must be able to contain. If any other errors are returned, the value to which pcchUnescaped points is undefined.",
                    "possible_constants": []
                },
                {
                    "name": "pszUnescaped",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "*pcchUnescaped",
                    "type": "DWORD",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "dwFlags",
                    "type": "DWORD",
                    "description": " Type: DWORD Flags that control which characters are unescaped. It can be a combination of the following flags. Do not convert the # or ? character, or any characters following them in the string. Introduced in Windows\u00a08. Decode URLs that were encoded by using the URL_ESCAPE_AS_UTF8 flag. Use pszURL to return the converted string instead of pszUnescaped.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "WhichPlatform",
            "return_type": "UINT",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-whichplatform",
            "description": "",
            "parameters": [],
            "flags": []
        },
        {
            "name": "wnsprintfA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-wnsprintfa",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchDest",
                    "type": "int",
                    "description": "Type: int The maximum number of characters allowed in pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "pszFmt",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A printf-style format string. The %s format identifier should never be used in an unbounded form. To avoid potential buffer overruns, always specify a size; for instance \"%32s\". ... Additional parameters that contain the data to be output.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "wnsprintfW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-wnsprintfw",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchDest",
                    "type": "int",
                    "description": "Type: int The maximum number of characters allowed in pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "pszFmt",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A printf-style format string. The %s format identifier should never be used in an unbounded form. To avoid potential buffer overruns, always specify a size; for instance \"%32s\". ... Additional parameters that contain the data to be output.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "wvnsprintfA",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-wvnsprintfa",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchDest",
                    "type": "int",
                    "description": "Type: int The maximum number of characters allowed in pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "pszFmt",
                    "type": "PCSTR",
                    "description": "Type: PCTSTR A printf-style format string. The %s format identifier should never be used in an unbounded form. To avoid potential buffer overruns, always specify a size; for instance \"%32s\".",
                    "possible_constants": []
                },
                {
                    "name": "arglist",
                    "type": "va_list",
                    "description": "Type: va_list A pointer to a list of command-line parameters used to customize the output.",
                    "possible_constants": []
                }
            ],
            "flags": []
        },
        {
            "name": "wvnsprintfW",
            "return_type": "int",
            "msdn": "https://learn.microsoft.com/en-us/windows/win32/api/shlwapi/nf-shlwapi-wvnsprintfw",
            "description": "",
            "parameters": [
                {
                    "name": "pszDest",
                    "type": "PWSTR",
                    "description": "",
                    "possible_constants": []
                },
                {
                    "name": "cchDest",
                    "type": "int",
                    "description": "Type: int The maximum number of characters allowed in pszDest.",
                    "possible_constants": []
                },
                {
                    "name": "pszFmt",
                    "type": "PCWSTR",
                    "description": "Type: PCTSTR A printf-style format string. The %s format identifier should never be used in an unbounded form. To avoid potential buffer overruns, always specify a size; for instance \"%32s\".",
                    "possible_constants": []
                },
                {
                    "name": "arglist",
                    "type": "va_list",
                    "description": "Type: va_list A pointer to a list of command-line parameters used to customize the output.",
                    "possible_constants": []
                }
            ],
            "flags": []
        }
    ]
}